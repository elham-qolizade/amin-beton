{
    "sourceFile": "app/src/features/sale-panel/Prefactor.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1745898252157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745898385122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,11 +100,12 @@\n };\r\n \r\n function InvoicesListWithForm({ orderDetails }) {\r\n   const [price, setPrice] = useState(\"\");\r\n-  const [invoiceFile, setInvoiceFile] = useState(\"\");\r\n+  const [invoiceFile, setInvoiceFile] = useState(null);\r\n   const [loading, setLoading] = useState(false);\r\n   const [invoices, setInvoices] = useState(orderDetails.invoices || []);\r\n+  const hasConfirmedInvoice = invoices.some((invoice) => invoice.status === 2);\r\n \r\n   const handleCreateInvoice = async (e) => {\r\n     e.preventDefault();\r\n \r\n@@ -115,20 +116,20 @@\n \r\n     setLoading(true);\r\n \r\n     try {\r\n+      const formData = new FormData();\r\n+      formData.append(\"order\", orderDetails.id);\r\n+      formData.append(\"price\", price);\r\n+      if (invoiceFile) {\r\n+        formData.append(\"invoice_file\", invoiceFile);\r\n+      }\r\n+\r\n       const response = await fetch(\r\n         \"http://amin-beton-back.chbk.app/api/invoice-management/\",\r\n         {\r\n           method: \"POST\",\r\n-          headers: {\r\n-            \"Content-Type\": \"application/json\",\r\n-          },\r\n-          body: JSON.stringify({\r\n-            order: orderDetails.id,\r\n-            invoice_file: invoiceFile,\r\n-            price: Number(price),\r\n-          }),\r\n+          body: formData,\r\n         }\r\n       );\r\n \r\n       if (response.ok) {\r\n@@ -137,9 +138,9 @@\n \r\n         setInvoices((prev) => [...prev, data]);\r\n \r\n         setPrice(\"\");\r\n-        setInvoiceFile(\"\");\r\n+        setInvoiceFile(null);\r\n       } else {\r\n         alert(\"مشکلی پیش آمد، دوباره تلاش کنید!\");\r\n       }\r\n     } catch (error) {\r\n@@ -188,31 +189,31 @@\n       ) : (\r\n         <p>هیچ پیش‌فاکتوری ثبت نشده است.</p>\r\n       )}\r\n \r\n-      <FormWrapper onSubmit={handleCreateInvoice}>\r\n-        <Title>ایجاد پیش‌فاکتور جدید</Title>\r\n+      {!hasConfirmedInvoice && (\r\n+        <FormWrapper onSubmit={handleCreateInvoice}>\r\n+          <Title>ایجاد پیش‌فاکتور جدید</Title>\r\n \r\n-        <label>قیمت پیش‌فاکتور (تومان):</label>\r\n-        <InputField\r\n-          type=\"number\"\r\n-          placeholder=\"مثلاً 1000000\"\r\n-          value={price}\r\n-          onChange={(e) => setPrice(e.target.value)}\r\n-        />\r\n+          <label>قیمت پیش‌فاکتور (تومان):</label>\r\n+          <InputField\r\n+            type=\"number\"\r\n+            placeholder=\"مثلاً 1000000\"\r\n+            value={price}\r\n+            onChange={(e) => setPrice(e.target.value)}\r\n+          />\r\n \r\n-        <label>لینک فایل پیش فاکتور:</label>\r\n-        <InputField\r\n-          type=\"text\"\r\n-          placeholder=\"لینک فایل پیش فاکتور\"\r\n-          value={invoiceFile}\r\n-          onChange={(e) => setInvoiceFile(e.target.value)}\r\n-        />\r\n+          <label>آپلود فایل پیش‌فاکتور:</label>\r\n+          <InputField\r\n+            type=\"file\"\r\n+            onChange={(e) => setInvoiceFile(e.target.files[0])}\r\n+          />\r\n \r\n-        <SubmitButton type=\"submit\" disabled={loading}>\r\n-          {loading ? \"در حال ارسال...\" : \"ایجاد پیش‌فاکتور\"}\r\n-        </SubmitButton>\r\n-      </FormWrapper>\r\n+          <SubmitButton type=\"submit\" disabled={loading}>\r\n+            {loading ? \"در حال ارسال...\" : \"ایجاد پیش‌فاکتور\"}\r\n+          </SubmitButton>\r\n+        </FormWrapper>\r\n+      )}\r\n     </Wrapper>\r\n   );\r\n }\r\n \r\n@@ -229,9 +230,7 @@\n         price: PropTypes.number.isRequired,\r\n       })\r\n     ),\r\n   }).isRequired,\r\n-  onConfirm: PropTypes.func.isRequired,\r\n-  disabled: PropTypes.bool.isRequired,\r\n };\r\n \r\n-export default InvoicesListWithForm;\r\n+export default InvoicesListWithForm;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1745898252157,
            "name": "Commit-0",
            "content": "import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 6rem;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: var(--color-dark);\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst InvoiceCard = styled.div`\r\n  background-color: #f9f9f9;\r\n  padding: 2rem;\r\n  margin-bottom: 1.5rem;\r\n  border-radius: 8px;\r\n  border: 1px solid #eee;\r\n`;\r\n\r\nconst StatusText = styled.p`\r\n  font-size: 1.2rem;\r\n  color: var(--color-grey-800);\r\n`;\r\n\r\nconst PriceText = styled.p`\r\n  font-size: 1.3rem;\r\n  font-weight: bold;\r\n  color: var(--color-green-600);\r\n`;\r\n\r\nconst CreatedAtText = styled.p`\r\n  font-size: 1rem;\r\n  color: var(--color-grey-600);\r\n`;\r\n\r\nconst InvoiceLink = styled.a`\r\n  color: var(--color-blue-600);\r\n  font-size: 1rem;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: var(--color-blue-800);\r\n  }\r\n`;\r\n\r\nconst DenyReason = styled.p`\r\n  font-size: 1rem;\r\n  color: var(--color-red-600);\r\n  font-weight: bold;\r\n`;\r\n\r\nconst FormWrapper = styled.form`\r\n  background-color: #f1f1f1;\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  margin-top: 3rem;\r\n`;\r\n\r\nconst InputField = styled.input`\r\n  width: 100%;\r\n  padding: 0.8rem;\r\n  margin-bottom: 1.5rem;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  padding: 0.8rem 1.6rem;\r\n  background-color: var(--color-brand-600);\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1.1rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: var(--color-brand-800);\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: var(--color-grey-400);\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst statusMap = {\r\n  1: \"ارسال شده\",\r\n  2: \"تایید شده\",\r\n  3: \"رد شده\",\r\n};\r\n\r\nfunction InvoicesListWithForm({ orderDetails }) {\r\n  const [price, setPrice] = useState(\"\");\r\n  const [invoiceFile, setInvoiceFile] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [invoices, setInvoices] = useState(orderDetails.invoices || []);\r\n\r\n  const handleCreateInvoice = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!price) {\r\n      alert(\"لطفا مبلغ پیش فاکتور را وارد کنید\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"http://amin-beton-back.chbk.app/api/invoice-management/\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            order: orderDetails.id,\r\n            invoice_file: invoiceFile,\r\n            price: Number(price),\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        alert(\"پیش فاکتور با موفقیت ایجاد شد!\");\r\n\r\n        setInvoices((prev) => [...prev, data]);\r\n\r\n        setPrice(\"\");\r\n        setInvoiceFile(\"\");\r\n      } else {\r\n        alert(\"مشکلی پیش آمد، دوباره تلاش کنید!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"خطا در ارسال فاکتور:\", error);\r\n      alert(\"خطا در ارسال فاکتور\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>پیش فاکتورهای سفارش</Title>\r\n\r\n      {invoices.length > 0 ? (\r\n        invoices.map((invoice) => (\r\n          <InvoiceCard key={invoice.id}>\r\n            <StatusText>\r\n              وضعیت: {statusMap[invoice.status] ?? \"نامشخص\"}\r\n            </StatusText>\r\n\r\n            <PriceText>قیمت: {invoice.price} تومان</PriceText>\r\n\r\n            <CreatedAtText>تاریخ ایجاد: {invoice.created_at}</CreatedAtText>\r\n\r\n            {invoice.invoice_file ? (\r\n              <p>\r\n                فایل پیش فاکتور:{\" \"}\r\n                <InvoiceLink\r\n                  href={invoice.invoice_file}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  دانلود\r\n                </InvoiceLink>\r\n              </p>\r\n            ) : (\r\n              <p>پیش فاکتور موجود نیست.</p>\r\n            )}\r\n\r\n            {invoice.status === 3 && invoice.deny_reason && (\r\n              <DenyReason>دلیل رد شدن: {invoice.deny_reason}</DenyReason>\r\n            )}\r\n          </InvoiceCard>\r\n        ))\r\n      ) : (\r\n        <p>هیچ پیش‌فاکتوری ثبت نشده است.</p>\r\n      )}\r\n\r\n      <FormWrapper onSubmit={handleCreateInvoice}>\r\n        <Title>ایجاد پیش‌فاکتور جدید</Title>\r\n\r\n        <label>قیمت پیش‌فاکتور (تومان):</label>\r\n        <InputField\r\n          type=\"number\"\r\n          placeholder=\"مثلاً 1000000\"\r\n          value={price}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n        />\r\n\r\n        <label>لینک فایل پیش فاکتور:</label>\r\n        <InputField\r\n          type=\"text\"\r\n          placeholder=\"لینک فایل پیش فاکتور\"\r\n          value={invoiceFile}\r\n          onChange={(e) => setInvoiceFile(e.target.value)}\r\n        />\r\n\r\n        <SubmitButton type=\"submit\" disabled={loading}>\r\n          {loading ? \"در حال ارسال...\" : \"ایجاد پیش‌فاکتور\"}\r\n        </SubmitButton>\r\n      </FormWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nInvoicesListWithForm.propTypes = {\r\n  orderDetails: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    invoices: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        status: PropTypes.number.isRequired,\r\n        invoice_file: PropTypes.string,\r\n        deny_reason: PropTypes.string,\r\n        created_at: PropTypes.string,\r\n        price: PropTypes.number.isRequired,\r\n      })\r\n    ),\r\n  }).isRequired,\r\n  onConfirm: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default InvoicesListWithForm;\r\n\r\n"
        }
    ]
}