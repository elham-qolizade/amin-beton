{
    "sourceFile": "app/src/features/financial-panel/UpdateOrderPaymentForm.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746528396633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746528396633,
            "name": "Commit-0",
            "content": "import { useForm } from \"react-hook-form\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction UpdateOrderPaymentForm({ paymentStepId, onSuccess, method = \"PATCH\" }) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPayment = async () => {\r\n      try {\r\n        const tokenData = JSON.parse(localStorage.getItem(\"token\"));\r\n        const token = tokenData?.access;\r\n\r\n        if (!token) {\r\n          alert(\"توکن احراز هویت موجود نیست.\");\r\n          return;\r\n        }\r\n\r\n        const response = await fetch(\r\n          `http://amin-beton-back.chbk.app/api/order-payment-steps-management/${paymentStepId}/`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"دریافت اطلاعات پرداخت با خطا مواجه شد.\");\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        reset({\r\n          title: data.title || \"\",\r\n          amount: data.amount || \"\",\r\n          payment_datetime: data.payment_datetime?.slice(0, 16) || \"\",\r\n          note: data.note || \"\",\r\n        });\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"خطا در واکشی اطلاعات:\", error);\r\n        alert(\"خطا در واکشی اطلاعات پرداخت\");\r\n      }\r\n    };\r\n\r\n    fetchPayment();\r\n  }, [paymentStepId, reset]);\r\n\r\n  const onSubmit = async (data) => {\r\n    const formData = new FormData();\r\n    formData.append(\"title\", data.title);\r\n    formData.append(\"amount\", data.amount);\r\n    formData.append(\"payment_datetime\", data.payment_datetime);\r\n\r\n    if (data.attachment?.[0]) {\r\n      formData.append(\"attachment\", data.attachment[0]);\r\n    }\r\n\r\n    if (data.note) {\r\n      formData.append(\"note\", data.note);\r\n    }\r\n\r\n    try {\r\n      const tokenData = JSON.parse(localStorage.getItem(\"token\"));\r\n      const token = tokenData?.access;\r\n\r\n      if (!token) {\r\n        alert(\"توکن احراز هویت موجود نیست.\");\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(\r\n        `http://amin-beton-back.chbk.app/api/order-payment-steps-management/${paymentStepId}/`,\r\n        {\r\n          method,\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: formData,\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        try {\r\n          const errorData = JSON.parse(errorText);\r\n          throw new Error(errorData.message || \"خطا در به‌روزرسانی پرداخت\");\r\n        } catch {\r\n          throw new Error(\"پاسخ سرور معتبر نیست یا خطای داخلی دارد.\");\r\n        }\r\n      }\r\n\r\n      const result = await response.json();\r\n      onSuccess?.(result);\r\n      alert(\"پرداخت با موفقیت به‌روزرسانی شد.\");\r\n    } catch (error) {\r\n      console.error(\"خطا در ارسال:\", error);\r\n      alert(error.message || \"ویرایش پرداخت با خطا مواجه شد.\");\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>در حال بارگذاری اطلاعات پرداخت...</p>;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: \"400px\" }}>\r\n      <div>\r\n        <label>عنوان پرداخت *</label>\r\n        <input {...register(\"title\", { required: true })} type=\"text\" />\r\n        {errors.title && <p style={{ color: \"red\" }}>عنوان الزامی است.</p>}\r\n      </div>\r\n\r\n      <div>\r\n        <label>مبلغ *</label>\r\n        <input {...register(\"amount\", { required: true, min: 0 })} type=\"number\" />\r\n        {errors.amount && <p style={{ color: \"red\" }}>مبلغ معتبر وارد کنید.</p>}\r\n      </div>\r\n\r\n      <div>\r\n        <label>تاریخ پرداخت *</label>\r\n        <input {...register(\"payment_datetime\", { required: true })} type=\"datetime-local\" />\r\n        {errors.payment_datetime && <p style={{ color: \"red\" }}>تاریخ الزامی است.</p>}\r\n      </div>\r\n\r\n      <div>\r\n        <label>ضمیمه (اختیاری)</label>\r\n        <input {...register(\"attachment\")} type=\"file\" />\r\n      </div>\r\n\r\n      <div>\r\n        <label>یادداشت (اختیاری)</label>\r\n        <textarea {...register(\"note\")} />\r\n      </div>\r\n\r\n      <button type=\"submit\" disabled={isSubmitting}>\r\n        {isSubmitting ? \"در حال ارسال...\" : \"به‌روزرسانی پرداخت\"}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nUpdateOrderPaymentForm.propTypes = {\r\n  paymentStepId: PropTypes.number.isRequired,\r\n  onSuccess: PropTypes.func.isRequired,\r\n  method: PropTypes.oneOf([\"PATCH\", \"PUT\"]),\r\n};\r\n\r\nexport default UpdateOrderPaymentForm;\r\n"
        }
    ]
}