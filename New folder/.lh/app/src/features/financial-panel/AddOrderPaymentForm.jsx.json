{
    "sourceFile": "app/src/features/financial-panel/AddOrderPaymentForm.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1746527980056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746605781631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,66 @@\n import { useForm } from \"react-hook-form\";\r\n import PropTypes from \"prop-types\";\r\n+import styled from \"styled-components\";\r\n \r\n+const StyledForm = styled.form`\r\n+  max-width: 500px;\r\n+  margin: 2rem auto;\r\n+  padding: 2rem;\r\n+  background-color: #fdfdfd;\r\n+  border-radius: 12px;\r\n+  box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);\r\n+\r\n+  label {\r\n+    display: block;\r\n+    margin-bottom: 0.25rem;\r\n+    font-weight: bold;\r\n+  }\r\n+\r\n+  input,\r\n+  textarea {\r\n+    width: 100%;\r\n+    padding: 0.6rem 0.8rem;\r\n+    margin-bottom: 1.5rem;\r\n+    border: 1px solid #ccc;\r\n+    border-radius: 6px;\r\n+    font-size: 1rem;\r\n+    font-family: inherit;\r\n+  }\r\n+\r\n+  textarea {\r\n+    min-height: 80px;\r\n+    resize: vertical;\r\n+  }\r\n+\r\n+  p {\r\n+    color: red;\r\n+    margin-top: -1rem;\r\n+    margin-bottom: 1rem;\r\n+    font-size: 0.9rem;\r\n+  }\r\n+\r\n+  button {\r\n+    background-color: #007bff;\r\n+    color: white;\r\n+    padding: 0.8rem 1.5rem;\r\n+    border: none;\r\n+    border-radius: 8px;\r\n+    font-size: 1rem;\r\n+    cursor: pointer;\r\n+    transition: background-color 0.3s;\r\n+  }\r\n+\r\n+  button:disabled {\r\n+    background-color: #ccc;\r\n+    cursor: not-allowed;\r\n+  }\r\n+\r\n+  button:hover:not(:disabled) {\r\n+    background-color: #0056b3;\r\n+  }\r\n+`;\r\n+\r\n function AddOrderPaymentForm({ orderId, onSuccess }) {\r\n   const {\r\n     register,\r\n     handleSubmit,\r\n@@ -63,36 +122,34 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: \"400px\" }}>\r\n+    <StyledForm onSubmit={handleSubmit(onSubmit)}>\r\n       <div>\r\n         <label>عنوان پرداخت *</label>\r\n         <input\r\n           {...register(\"title\", { required: true, minLength: 1 })}\r\n           type=\"text\"\r\n         />\r\n-        {errors.title && <p style={{ color: \"red\" }}>عنوان الزامی است.</p>}\r\n+        {errors.title && <p>عنوان الزامی است.</p>}\r\n       </div>\r\n \r\n       <div>\r\n         <label>مبلغ *</label>\r\n         <input\r\n           {...register(\"amount\", { required: true, min: 0 })}\r\n           type=\"number\"\r\n         />\r\n-        {errors.amount && <p style={{ color: \"red\" }}>مبلغ معتبر وارد کنید.</p>}\r\n+        {errors.amount && <p>مبلغ معتبر وارد کنید.</p>}\r\n       </div>\r\n \r\n       <div>\r\n         <label>تاریخ پرداخت *</label>\r\n         <input\r\n           {...register(\"payment_datetime\", { required: true })}\r\n           type=\"datetime-local\"\r\n         />\r\n-        {errors.payment_datetime && (\r\n-          <p style={{ color: \"red\" }}>تاریخ الزامی است.</p>\r\n-        )}\r\n+        {errors.payment_datetime && <p>تاریخ الزامی است.</p>}\r\n       </div>\r\n \r\n       <div>\r\n         <label>ضمیمه (اختیاری)</label>\r\n@@ -106,9 +163,9 @@\n \r\n       <button type=\"submit\" disabled={isSubmitting}>\r\n         {isSubmitting ? \"در حال ارسال...\" : \"ثبت پرداخت\"}\r\n       </button>\r\n-    </form>\r\n+    </StyledForm>\r\n   );\r\n }\r\n \r\n AddOrderPaymentForm.propTypes = {\r\n"
                }
            ],
            "date": 1746527980056,
            "name": "Commit-0",
            "content": "import { useForm } from \"react-hook-form\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction AddOrderPaymentForm({ orderId, onSuccess }) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    const formData = new FormData();\r\n    formData.append(\"title\", data.title);\r\n    formData.append(\"amount\", data.amount);\r\n    formData.append(\"payment_datetime\", data.payment_datetime);\r\n\r\n    if (data.attachment?.[0]) {\r\n      formData.append(\"attachment\", data.attachment[0]);\r\n    }\r\n\r\n    if (data.note) {\r\n      formData.append(\"note\", data.note);\r\n    }\r\n\r\n    try {\r\n      const tokenData = JSON.parse(localStorage.getItem(\"token\"));\r\n      const token = tokenData?.access;\r\n\r\n      if (!token) {\r\n        alert(\"توکن احراز هویت موجود نیست.\");\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(\r\n        `http://amin-beton-back.chbk.app/api/order-management/${orderId}/add-order-payments/`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: formData,\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        try {\r\n          const errorData = JSON.parse(errorText);\r\n          throw new Error(errorData.message || \"Failed to submit payment\");\r\n        } catch {\r\n          throw new Error(\"پاسخ سرور معتبر نیست یا خطای داخلی سرور است.\");\r\n        }\r\n      }\r\n\r\n      const result = await response.json();\r\n      onSuccess?.(result);\r\n      reset();\r\n      alert(\"پرداخت با موفقیت ثبت شد.\");\r\n    } catch (error) {\r\n      console.error(\"خطا در ارسال پرداخت:\", error);\r\n      alert(error.message || \"ثبت پرداخت با خطا مواجه شد.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: \"400px\" }}>\r\n      <div>\r\n        <label>عنوان پرداخت *</label>\r\n        <input\r\n          {...register(\"title\", { required: true, minLength: 1 })}\r\n          type=\"text\"\r\n        />\r\n        {errors.title && <p style={{ color: \"red\" }}>عنوان الزامی است.</p>}\r\n      </div>\r\n\r\n      <div>\r\n        <label>مبلغ *</label>\r\n        <input\r\n          {...register(\"amount\", { required: true, min: 0 })}\r\n          type=\"number\"\r\n        />\r\n        {errors.amount && <p style={{ color: \"red\" }}>مبلغ معتبر وارد کنید.</p>}\r\n      </div>\r\n\r\n      <div>\r\n        <label>تاریخ پرداخت *</label>\r\n        <input\r\n          {...register(\"payment_datetime\", { required: true })}\r\n          type=\"datetime-local\"\r\n        />\r\n        {errors.payment_datetime && (\r\n          <p style={{ color: \"red\" }}>تاریخ الزامی است.</p>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label>ضمیمه (اختیاری)</label>\r\n        <input {...register(\"attachment\")} type=\"file\" />\r\n      </div>\r\n\r\n      <div>\r\n        <label>یادداشت (اختیاری)</label>\r\n        <textarea {...register(\"note\")} />\r\n      </div>\r\n\r\n      <button type=\"submit\" disabled={isSubmitting}>\r\n        {isSubmitting ? \"در حال ارسال...\" : \"ثبت پرداخت\"}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nAddOrderPaymentForm.propTypes = {\r\n  orderId: PropTypes.number.isRequired,\r\n  onSuccess: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddOrderPaymentForm;\r\n"
        }
    ]
}