{
    "sourceFile": "app/src/features/execution-panel/AddNote.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1745166135427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745166329452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import Input from \"../../ui/Input\";\r\n import { useForm } from \"react-hook-form\";\r\n import FormRow from \"../../ui/FormRow\";\r\n import Button from \"../../ui/Button\";\r\n-\r\n+import AddNote from \"./AddNote\";\r\n const StyledAddNote = styled.div`\r\n   h3 {\r\n     margin-bottom: 3rem;\r\n   }\r\n"
                },
                {
                    "date": 1745166916845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import Input from \"../../ui/Input\";\r\n import { useForm } from \"react-hook-form\";\r\n import FormRow from \"../../ui/FormRow\";\r\n import Button from \"../../ui/Button\";\r\n-import AddNote from \"./AddNote\";\r\n+// import AddNote from \"./AddNote\";\r\n const StyledAddNote = styled.div`\r\n   h3 {\r\n     margin-bottom: 3rem;\r\n   }\r\n"
                },
                {
                    "date": 1746605068799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,60 +1,114 @@\n-/*eslint-disable */\r\n import styled from \"styled-components\";\r\n-import Form from \"../../ui/Form\";\r\n-import Input from \"../../ui/Input\";\r\n-import { useForm } from \"react-hook-form\";\r\n-import FormRow from \"../../ui/FormRow\";\r\n-import Button from \"../../ui/Button\";\r\n-// import AddNote from \"./AddNote\";\r\n+import { useEffect, useState } from \"react\";\r\n+\r\n const StyledAddNote = styled.div`\r\n   h3 {\r\n     margin-bottom: 3rem;\r\n   }\r\n-`;\r\n \r\n-function AddNote({ onCloseModal, onConfirm, disabled, orderId }) {\r\n-  const {\r\n-    register,\r\n-    formState: { errors },\r\n-    handleSubmit,\r\n-  } = useForm();\r\n+  li {\r\n+    margin-bottom: 2rem;\r\n+    padding-bottom: 1rem;\r\n+    border-bottom: 1px solid #ccc;\r\n+  }\r\n \r\n-  function onSubmit(data) {\r\n-    const submitData = {\r\n-      ...data,\r\n-      order: orderId,\r\n-    };\r\n-    console.log(submitData);\r\n-    onConfirm?.(submitData);\r\n-    onCloseModal();\r\n+  .note-header {\r\n+    display: flex;\r\n+    justify-content: space-between;\r\n+    margin-bottom: 0.5rem;\r\n   }\r\n \r\n-  function onError(data) {\r\n-    console.log(data);\r\n+  .panel-label {\r\n+    font-weight: bold;\r\n+    color: #555;\r\n   }\r\n \r\n+  .note-date {\r\n+    font-size: 0.85rem;\r\n+    color: #888;\r\n+  }\r\n+`;\r\n+\r\n+const panelLabels = {\r\n+  sales: \"فروش\",\r\n+  financial: \"مالی\",\r\n+  execution: \"اجرا\",\r\n+};\r\n+\r\n+function OrderNotes({ orderId }) {\r\n+  const [notes, setNotes] = useState([]);\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [error, setError] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!orderId) return;\r\n+\r\n+    const fetchNotes = async () => {\r\n+      setLoading(true);\r\n+      setError(null);\r\n+\r\n+      try {\r\n+        const tokenData = JSON.parse(localStorage.getItem(\"token\"));\r\n+        const token = tokenData?.access;\r\n+\r\n+        if (!token) {\r\n+          console.error(\"No access token found\");\r\n+          return;\r\n+        }\r\n+\r\n+        const response = await fetch(\r\n+          \"https://amin-beton-back.chbk.app/api/order-management/get-order-notes/\",\r\n+          {\r\n+            method: \"POST\",\r\n+            headers: {\r\n+              \"Content-Type\": \"application/json\",\r\n+              Authorization: `Bearer ${token}`,\r\n+            },\r\n+            body: JSON.stringify({ order_id: orderId }),\r\n+          }\r\n+        );\r\n+\r\n+        if (!response.ok) {\r\n+          const errorText = await response.text();\r\n+          console.error(\"Response Error:\", errorText);\r\n+          throw new Error(\"خطا در دریافت یادداشت‌ها\");\r\n+        }\r\n+\r\n+        const data = await response.json();\r\n+        setNotes(data);\r\n+      } catch (err) {\r\n+        setError(err.message || \"خطای ناشناخته\");\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchNotes();\r\n+  }, [orderId]);\r\n+\r\n+  if (loading) return <p>در حال بارگذاری...</p>;\r\n+  if (error) return <p>خطا: {error}</p>;\r\n+  if (notes.length === 0) return <p>یادداشتی ثبت نشده است.</p>;\r\n+\r\n   return (\r\n     <StyledAddNote>\r\n-      <h3>افزودن یادداشت</h3>\r\n-\r\n-      <Form type=\"modal\" onSubmit={handleSubmit(onSubmit, onError)}>\r\n-        <FormRow error={errors?.text?.message}>\r\n-          <Input\r\n-            type=\"text\"\r\n-            placeholder=\"یادداشت\"\r\n-            disabled={disabled}\r\n-            {...register(\"text\", {\r\n-              required: \"این فیلد الزامی است!\",\r\n-            })}\r\n-          />\r\n-        </FormRow>\r\n-\r\n-        <FormRow>\r\n-          <Button disabled={disabled}>ارسال</Button>\r\n-        </FormRow>\r\n-      </Form>\r\n+      <ul>\r\n+        {notes.map((note) => (\r\n+          <li key={note.id}>\r\n+            <div className=\"note-header\">\r\n+              <span className=\"panel-label\">\r\n+                {panelLabels[note.panel] || note.panel}\r\n+              </span>\r\n+              <span className=\"note-date\">\r\n+                {new Date(note.created_at).toLocaleString(\"fa-IR\")}\r\n+              </span>\r\n+            </div>\r\n+            <p>{note.text}</p>\r\n+          </li>\r\n+        ))}\r\n+      </ul>\r\n     </StyledAddNote>\r\n   );\r\n }\r\n \r\n-export default AddNote;\r\n+export default OrderNotes;\r\n"
                },
                {
                    "date": 1746605243839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import styled from \"styled-components\";\r\n import { useEffect, useState } from \"react\";\r\n+import PropTypes from \"prop-types\";\r\n \r\n const StyledAddNote = styled.div`\r\n   h3 {\r\n     margin-bottom: 3rem;\r\n"
                },
                {
                    "date": 1746605255423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,6 +110,9 @@\n       </ul>\r\n     </StyledAddNote>\r\n   );\r\n }\r\n+OrderNotes.propTypes = {\r\n+  orderId: PropTypes.number.isRequired,\r\n+};\r\n \r\n export default OrderNotes;\r\n"
                },
                {
                    "date": 1746721744295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,184 @@\n+import styled from \"styled-components\";\r\n+import { useEffect, useState } from \"react\";\r\n+import PropTypes from \"prop-types\";\r\n+\r\n+const StyledAddNote = styled.div`\r\n+  h3 {\r\n+    margin-bottom: 3rem;\r\n+  }\r\n+\r\n+  li {\r\n+    margin-bottom: 2rem;\r\n+    padding-bottom: 1rem;\r\n+    border-bottom: 1px solid #ccc;\r\n+  }\r\n+\r\n+  .note-header {\r\n+    display: flex;\r\n+    justify-content: space-between;\r\n+    margin-bottom: 0.5rem;\r\n+  }\r\n+\r\n+  .panel-label {\r\n+    font-weight: bold;\r\n+    color: #555;\r\n+  }\r\n+\r\n+  .note-date {\r\n+    font-size: 0.85rem;\r\n+    color: #888;\r\n+  }\r\n+\r\n+  form {\r\n+    margin-top: 2rem;\r\n+\r\n+    textarea {\r\n+      width: 100%;\r\n+      min-height: 80px;\r\n+      padding: 0.5rem;\r\n+      margin-bottom: 1rem;\r\n+    }\r\n+\r\n+    button {\r\n+      padding: 0.5rem 1rem;\r\n+    }\r\n+  }\r\n+`;\r\n+\r\n+const panelLabels = {\r\n+  sales: \"فروش\",\r\n+  financial: \"مالی\",\r\n+  execution: \"اجرا\",\r\n+};\r\n+\r\n+function OrderNotes({ orderId, panel, showForm = false }) {\r\n+  const [notes, setNotes] = useState([]);\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [error, setError] = useState(null);\r\n+  const [newNote, setNewNote] = useState(\"\");\r\n+  const [submitting, setSubmitting] = useState(false);\r\n+\r\n+  const fetchNotes = async () => {\r\n+    setLoading(true);\r\n+    setError(null);\r\n+    try {\r\n+      const tokenData = JSON.parse(localStorage.getItem(\"token\"));\r\n+      const token = tokenData?.access;\r\n+\r\n+      if (!token) throw new Error(\"توکن یافت نشد\");\r\n+\r\n+      const response = await fetch(\r\n+        \"https://amin-beton-back.chbk.app/api/order-management/get-order-notes/\",\r\n+        {\r\n+          method: \"POST\",\r\n+          headers: {\r\n+            \"Content-Type\": \"application/json\",\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+          body: JSON.stringify({ order_id: orderId }),\r\n+        }\r\n+      );\r\n+\r\n+      if (!response.ok) throw new Error(\"خطا در دریافت یادداشت‌ها\");\r\n+\r\n+      const data = await response.json();\r\n+      setNotes(data);\r\n+    } catch (err) {\r\n+      setError(err.message || \"خطای ناشناخته\");\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (orderId) fetchNotes();\r\n+  }, [orderId]);\r\n+\r\n+  const handleAddNote = async (e) => {\r\n+    e.preventDefault();\r\n+    if (!newNote.trim()) return;\r\n+\r\n+    setSubmitting(true);\r\n+    setError(null);\r\n+\r\n+    try {\r\n+      const tokenData = JSON.parse(localStorage.getItem(\"token\"));\r\n+      const token = tokenData?.access;\r\n+\r\n+      if (!token) throw new Error(\"توکن یافت نشد\");\r\n+\r\n+      const response = await fetch(\r\n+        \"https://amin-beton-back.chbk.app/api/order-management/add-note/\",\r\n+        {\r\n+          method: \"POST\",\r\n+          headers: {\r\n+            \"Content-Type\": \"application/json\",\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+          body: JSON.stringify({\r\n+            order_id: orderId,\r\n+            text: newNote.trim(),\r\n+            panel, // پنل ثابت مثل 'sales'\r\n+          }),\r\n+        }\r\n+      );\r\n+\r\n+      if (!response.ok) throw new Error(\"خطا در ارسال یادداشت\");\r\n+\r\n+      setNewNote(\"\");\r\n+      fetchNotes(); // رفرش لیست\r\n+    } catch (err) {\r\n+      setError(err.message || \"خطای ارسال یادداشت\");\r\n+    } finally {\r\n+      setSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  if (loading) return <p>در حال بارگذاری...</p>;\r\n+  if (error) return <p>خطا: {error}</p>;\r\n+\r\n+  return (\r\n+    <StyledAddNote>\r\n+      <ul>\r\n+        {notes.length === 0 ? (\r\n+          <p>یادداشتی ثبت نشده است.</p>\r\n+        ) : (\r\n+          notes.map((note) => (\r\n+            <li key={note.id}>\r\n+              <div className=\"note-header\">\r\n+                <span className=\"panel-label\">\r\n+                  {panelLabels[note.panel] || note.panel}\r\n+                </span>\r\n+                <span className=\"note-date\">\r\n+                  {new Date(note.created_at).toLocaleString(\"fa-IR\")}\r\n+                </span>\r\n+              </div>\r\n+              <p>{note.text}</p>\r\n+            </li>\r\n+          ))\r\n+        )}\r\n+      </ul>\r\n+\r\n+      {showForm && (\r\n+        <form onSubmit={handleAddNote}>\r\n+          <textarea\r\n+            value={newNote}\r\n+            onChange={(e) => setNewNote(e.target.value)}\r\n+            placeholder=\"یادداشت خود را وارد کنید...\"\r\n+          />\r\n+          <button type=\"submit\" disabled={submitting}>\r\n+            {submitting ? \"در حال ارسال...\" : \"افزودن یادداشت\"}\r\n+          </button>\r\n+        </form>\r\n+      )}\r\n+    </StyledAddNote>\r\n+  );\r\n+}\r\n+\r\n+OrderNotes.propTypes = {\r\n+  orderId: PropTypes.number.isRequired,\r\n+  panel: PropTypes.oneOf([\"sales\", \"financial\", \"execution\"]).isRequired,\r\n+  showForm: PropTypes.bool,\r\n+};\r\n+\r\n+export default OrderNotes;\r\n"
                },
                {
                    "date": 1746722824416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n   financial: \"مالی\",\r\n   execution: \"اجرا\",\r\n };\r\n \r\n-function OrderNotes({ orderId, panel, showForm = false }) {\r\n+function OrderNotes({ orderId, panel, readonly = false }) {\r\n   const [notes, setNotes] = useState([]);\r\n   const [loading, setLoading] = useState(false);\r\n   const [error, setError] = useState(null);\r\n   const [newNote, setNewNote] = useState(\"\");\r\n@@ -117,17 +117,17 @@\n           },\r\n           body: JSON.stringify({\r\n             order_id: orderId,\r\n             text: newNote.trim(),\r\n-            panel, // پنل ثابت مثل 'sales'\r\n+            panel, // فقط فرستاده می‌شه اگر readonly نیست\r\n           }),\r\n         }\r\n       );\r\n \r\n       if (!response.ok) throw new Error(\"خطا در ارسال یادداشت\");\r\n \r\n       setNewNote(\"\");\r\n-      fetchNotes(); // رفرش لیست\r\n+      fetchNotes();\r\n     } catch (err) {\r\n       setError(err.message || \"خطای ارسال یادداشت\");\r\n     } finally {\r\n       setSubmitting(false);\r\n@@ -158,9 +158,9 @@\n           ))\r\n         )}\r\n       </ul>\r\n \r\n-      {showForm && (\r\n+      {!readonly && (\r\n         <form onSubmit={handleAddNote}>\r\n           <textarea\r\n             value={newNote}\r\n             onChange={(e) => setNewNote(e.target.value)}\r\n@@ -176,9 +176,9 @@\n }\r\n \r\n OrderNotes.propTypes = {\r\n   orderId: PropTypes.number.isRequired,\r\n-  panel: PropTypes.oneOf([\"sales\", \"financial\", \"execution\"]).isRequired,\r\n-  showForm: PropTypes.bool,\r\n+  panel: PropTypes.oneOf([\"sales\", \"financial\", \"execution\"]),\r\n+  readonly: PropTypes.bool,\r\n };\r\n \r\n export default OrderNotes;\r\n"
                },
                {
                    "date": 1746723010973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,12 @@\n   financial: \"مالی\",\r\n   execution: \"اجرا\",\r\n };\r\n \r\n-function OrderNotes({ orderId, panel, readonly = false }) {\r\n+// مقدار ثابت برای پنل این صفحه (به‌دلخواه: sales, financial, execution)\r\n+const CURRENT_PANEL = \"sales\";\r\n+\r\n+function OrderNotes({ orderId, readonly = false }) {\r\n   const [notes, setNotes] = useState([]);\r\n   const [loading, setLoading] = useState(false);\r\n   const [error, setError] = useState(null);\r\n   const [newNote, setNewNote] = useState(\"\");\r\n@@ -117,9 +120,9 @@\n           },\r\n           body: JSON.stringify({\r\n             order_id: orderId,\r\n             text: newNote.trim(),\r\n-            panel, // فقط فرستاده می‌شه اگر readonly نیست\r\n+            panel: CURRENT_PANEL,\r\n           }),\r\n         }\r\n       );\r\n \r\n@@ -176,9 +179,8 @@\n }\r\n \r\n OrderNotes.propTypes = {\r\n   orderId: PropTypes.number.isRequired,\r\n-  panel: PropTypes.oneOf([\"sales\", \"financial\", \"execution\"]),\r\n   readonly: PropTypes.bool,\r\n };\r\n \r\n export default OrderNotes;\r\n"
                },
                {
                    "date": 1746723137615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,12 +50,9 @@\n   financial: \"مالی\",\r\n   execution: \"اجرا\",\r\n };\r\n \r\n-// مقدار ثابت برای پنل این صفحه (به‌دلخواه: sales, financial, execution)\r\n-const CURRENT_PANEL = \"sales\";\r\n-\r\n-function OrderNotes({ orderId, readonly = false }) {\r\n+function OrderNotes({ orderId, panel, readonly = false }) {\r\n   const [notes, setNotes] = useState([]);\r\n   const [loading, setLoading] = useState(false);\r\n   const [error, setError] = useState(null);\r\n   const [newNote, setNewNote] = useState(\"\");\r\n@@ -120,9 +117,9 @@\n           },\r\n           body: JSON.stringify({\r\n             order_id: orderId,\r\n             text: newNote.trim(),\r\n-            panel: CURRENT_PANEL,\r\n+            panel, // فقط فرستاده می‌شه اگر readonly نیست\r\n           }),\r\n         }\r\n       );\r\n \r\n@@ -179,126 +176,9 @@\n }\r\n \r\n OrderNotes.propTypes = {\r\n   orderId: PropTypes.number.isRequired,\r\n+  panel: PropTypes.oneOf([\"sales\", \"financial\", \"execution\"]),\r\n   readonly: PropTypes.bool,\r\n };\r\n \r\n export default OrderNotes;\r\n-import styled from \"styled-components\";\r\n-import { useEffect, useState } from \"react\";\r\n-import PropTypes from \"prop-types\";\r\n-\r\n-const StyledAddNote = styled.div`\r\n-  h3 {\r\n-    margin-bottom: 3rem;\r\n-  }\r\n-\r\n-  li {\r\n-    margin-bottom: 2rem;\r\n-    padding-bottom: 1rem;\r\n-    border-bottom: 1px solid #ccc;\r\n-  }\r\n-\r\n-  .note-header {\r\n-    display: flex;\r\n-    justify-content: space-between;\r\n-    margin-bottom: 0.5rem;\r\n-  }\r\n-\r\n-  .panel-label {\r\n-    font-weight: bold;\r\n-    color: #555;\r\n-  }\r\n-\r\n-  .note-date {\r\n-    font-size: 0.85rem;\r\n-    color: #888;\r\n-  }\r\n-`;\r\n-\r\n-const panelLabels = {\r\n-  sales: \"فروش\",\r\n-  financial: \"مالی\",\r\n-  execution: \"اجرا\",\r\n-};\r\n-\r\n-function OrderNotes({ orderId }) {\r\n-  const [notes, setNotes] = useState([]);\r\n-  const [loading, setLoading] = useState(false);\r\n-  const [error, setError] = useState(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!orderId) return;\r\n-\r\n-    const fetchNotes = async () => {\r\n-      setLoading(true);\r\n-      setError(null);\r\n-\r\n-      try {\r\n-        const tokenData = JSON.parse(localStorage.getItem(\"token\"));\r\n-        const token = tokenData?.access;\r\n-\r\n-        if (!token) {\r\n-          console.error(\"No access token found\");\r\n-          return;\r\n-        }\r\n-\r\n-        const response = await fetch(\r\n-          \"https://amin-beton-back.chbk.app/api/order-management/get-order-notes/\",\r\n-          {\r\n-            method: \"POST\",\r\n-            headers: {\r\n-              \"Content-Type\": \"application/json\",\r\n-              Authorization: `Bearer ${token}`,\r\n-            },\r\n-            body: JSON.stringify({ order_id: orderId }),\r\n-          }\r\n-        );\r\n-\r\n-        if (!response.ok) {\r\n-          const errorText = await response.text();\r\n-          console.error(\"Response Error:\", errorText);\r\n-          throw new Error(\"خطا در دریافت یادداشت‌ها\");\r\n-        }\r\n-\r\n-        const data = await response.json();\r\n-        setNotes(data);\r\n-      } catch (err) {\r\n-        setError(err.message || \"خطای ناشناخته\");\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchNotes();\r\n-  }, [orderId]);\r\n-\r\n-  if (loading) return <p>در حال بارگذاری...</p>;\r\n-  if (error) return <p>خطا: {error}</p>;\r\n-  if (notes.length === 0) return <p>یادداشتی ثبت نشده است.</p>;\r\n-\r\n-  return (\r\n-    <StyledAddNote>\r\n-      <ul>\r\n-        {notes.map((note) => (\r\n-          <li key={note.id}>\r\n-            <div className=\"note-header\">\r\n-              <span className=\"panel-label\">\r\n-                {panelLabels[note.panel] || note.panel}\r\n-              </span>\r\n-              <span className=\"note-date\">\r\n-                {new Date(note.created_at).toLocaleString(\"fa-IR\")}\r\n-              </span>\r\n-            </div>\r\n-            <p>{note.text}</p>\r\n-          </li>\r\n-        ))}\r\n-      </ul>\r\n-    </StyledAddNote>\r\n-  );\r\n-}\r\n-OrderNotes.propTypes = {\r\n-  orderId: PropTypes.number.isRequired,\r\n-};\r\n-\r\n-export default OrderNotes;\r\n"
                },
                {
                    "date": 1746723184950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n   financial: \"مالی\",\r\n   execution: \"اجرا\",\r\n };\r\n \r\n-function OrderNotes({ orderId, panel, readonly = false }) {\r\n+function OrderNotes({ orderId, panel, showForm = false }) {\r\n   const [notes, setNotes] = useState([]);\r\n   const [loading, setLoading] = useState(false);\r\n   const [error, setError] = useState(null);\r\n   const [newNote, setNewNote] = useState(\"\");\r\n@@ -117,17 +117,17 @@\n           },\r\n           body: JSON.stringify({\r\n             order_id: orderId,\r\n             text: newNote.trim(),\r\n-            panel, // فقط فرستاده می‌شه اگر readonly نیست\r\n+            panel, // پنل ثابت مثل 'sales'\r\n           }),\r\n         }\r\n       );\r\n \r\n       if (!response.ok) throw new Error(\"خطا در ارسال یادداشت\");\r\n \r\n       setNewNote(\"\");\r\n-      fetchNotes();\r\n+      fetchNotes(); // رفرش لیست\r\n     } catch (err) {\r\n       setError(err.message || \"خطای ارسال یادداشت\");\r\n     } finally {\r\n       setSubmitting(false);\r\n@@ -158,9 +158,9 @@\n           ))\r\n         )}\r\n       </ul>\r\n \r\n-      {!readonly && (\r\n+      {showForm && (\r\n         <form onSubmit={handleAddNote}>\r\n           <textarea\r\n             value={newNote}\r\n             onChange={(e) => setNewNote(e.target.value)}\r\n@@ -176,9 +176,9 @@\n }\r\n \r\n OrderNotes.propTypes = {\r\n   orderId: PropTypes.number.isRequired,\r\n-  panel: PropTypes.oneOf([\"sales\", \"financial\", \"execution\"]),\r\n-  readonly: PropTypes.bool,\r\n+  panel: PropTypes.oneOf([\"sales\", \"financial\", \"execution\"]).isRequired,\r\n+  showForm: PropTypes.bool,\r\n };\r\n \r\n export default OrderNotes;\r\n"
                }
            ],
            "date": 1745166135427,
            "name": "Commit-0",
            "content": "/*eslint-disable */\r\nimport styled from \"styled-components\";\r\nimport Form from \"../../ui/Form\";\r\nimport Input from \"../../ui/Input\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport FormRow from \"../../ui/FormRow\";\r\nimport Button from \"../../ui/Button\";\r\n\r\nconst StyledAddNote = styled.div`\r\n  h3 {\r\n    margin-bottom: 3rem;\r\n  }\r\n`;\r\n\r\nfunction AddNote({ onCloseModal, onConfirm, disabled, orderId }) {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n  } = useForm();\r\n\r\n  function onSubmit(data) {\r\n    const submitData = {\r\n      ...data,\r\n      order: orderId,\r\n    };\r\n    console.log(submitData);\r\n    onConfirm?.(submitData);\r\n    onCloseModal();\r\n  }\r\n\r\n  function onError(data) {\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <StyledAddNote>\r\n      <h3>افزودن یادداشت</h3>\r\n\r\n      <Form type=\"modal\" onSubmit={handleSubmit(onSubmit, onError)}>\r\n        <FormRow error={errors?.text?.message}>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"یادداشت\"\r\n            disabled={disabled}\r\n            {...register(\"text\", {\r\n              required: \"این فیلد الزامی است!\",\r\n            })}\r\n          />\r\n        </FormRow>\r\n\r\n        <FormRow>\r\n          <Button disabled={disabled}>ارسال</Button>\r\n        </FormRow>\r\n      </Form>\r\n    </StyledAddNote>\r\n  );\r\n}\r\n\r\nexport default AddNote;\r\n"
        }
    ]
}