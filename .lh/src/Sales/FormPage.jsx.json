{
    "sourceFile": "src/Sales/FormPage.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1744181353696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744181421333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,220 @@\n+import React, { useState } from \"react\";\r\n+import DatePicker from \"react-multi-date-picker\";\r\n+import TimePicker from \"react-multi-date-picker/plugins/time_picker\";\r\n+import persian from \"react-date-object/calendars/persian\";\r\n+import persian_fa from \"react-date-object/locales/persian_fa\";\r\n+import { toast } from \"react-toastify\";\r\n+import { useParams } from \"react-router-dom\";\r\n+\r\n+// کامپوننت مودال ساده\r\n+const Modal = ({ message, onClose }) => (\r\n+  <div className=\"modal-overlay\" onClick={onClose}>\r\n+    <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n+      <div className=\"relative p-8 text-white shadow-lg bg-Bokara-Grey rounded-2xl w-96\">\r\n+        <button\r\n+          onClick={onClose}\r\n+          className=\"absolute text-lg font-bold top-2 left-2 text-School-Bus\"\r\n+        >\r\n+          ×\r\n+        </button>\r\n+        <div className=\"flex flex-col items-center justify-center gap-4\">\r\n+          <h3 className=\"text-xl font-semibold text-School-Bus\">پیام سیستم</h3>\r\n+          <p className=\"text-center\">{message}</p>\r\n+          <button\r\n+            onClick={onClose}\r\n+            className=\"px-6 py-2 font-medium transition bg-School-Bus text-Bokara-Grey rounded-xl hover:opacity-90\"\r\n+          >\r\n+            تایید\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  </div>\r\n+);\r\n+\r\n+const FormPage = () => {\r\n+  const { orderId } = useParams();\r\n+  const [formData, setFormData] = useState({\r\n+    requestedDate: \"\",\r\n+    paymentMethod: \"\",\r\n+    additionalInfo: \"\",\r\n+  });\r\n+  const [errors, setErrors] = useState({\r\n+    requestedDate: \"\",\r\n+    paymentMethod: \"\",\r\n+    additionalInfo: \"\",\r\n+  });\r\n+  const [selectedDate, setSelectedDate] = useState(null);\r\n+  const [isModalOpen, setIsModalOpen] = useState(false); // وضعیت مودال\r\n+  const [modalMessage, setModalMessage] = useState(\"\"); // پیام مودال\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    let formErrors = {};\r\n+    let isValid = true;\r\n+\r\n+    if (!selectedDate) {\r\n+      formErrors.requestedDate = \"لطفاً تاریخ و ساعت را انتخاب کنید\";\r\n+      isValid = false;\r\n+    }\r\n+\r\n+    if (!formData.paymentMethod) {\r\n+      formErrors.paymentMethod = \"لطفاً نحوه تسویه را وارد کنید\";\r\n+      isValid = false;\r\n+    }\r\n+\r\n+    if (!formData.additionalInfo) {\r\n+      formErrors.additionalInfo = \"لطفاً توضیحات را وارد کنید\";\r\n+      isValid = false;\r\n+    }\r\n+\r\n+    setErrors(formErrors);\r\n+    return isValid;\r\n+  };\r\n+\r\n+  const updateOrder = async (id) => {\r\n+    const token = localStorage.getItem(\"accessToken\");\r\n+\r\n+    if (!token) {\r\n+      toast.warn(\"⛔️ لطفاً وارد شوید تا بتوانید ویرایش کنید.\");\r\n+      return;\r\n+    }\r\n+\r\n+    const response = await fetch(\r\n+      `https://amin-beton-back.chbk.app/api/orders/${id}/`,\r\n+      {\r\n+        method: \"PATCH\",\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+          Authorization: `Bearer ${token}`,\r\n+        },\r\n+        body: JSON.stringify({\r\n+          settlement_type: formData.paymentMethod,\r\n+          additional_description: formData.additionalInfo,\r\n+        }),\r\n+      }\r\n+    );\r\n+\r\n+    if (response.ok) {\r\n+      setModalMessage(\"سفارش با موفقیت بروزرسانی شد!\"); // تنظیم پیام مودال\r\n+      setIsModalOpen(true); // باز کردن مودال\r\n+    } else if (response.status === 401) {\r\n+      toast.error(\"خطای 401: لطفاً وارد شوید یا توکن معتبر وارد کنید.\");\r\n+    } else {\r\n+      toast.error(\"خطا در به‌روزرسانی سفارش!\");\r\n+    }\r\n+  };\r\n+\r\n+  const onSubmit = (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (validateForm()) {\r\n+      const formattedDate = selectedDate?.format(\"YYYY/MM/DD HH:mm\");\r\n+\r\n+      // ارسال داده‌ها به API\r\n+      if (orderId) {\r\n+        updateOrder(orderId);\r\n+      } else {\r\n+        toast.error(\"شناسه سفارش موجود نیست!\");\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"container p-6 mt-10 rounded-lg shadow-md bg-Bokara-Grey\">\r\n+      <h1 className=\"mb-6 text-xl font-bold text-white\">فرم درخواست</h1>\r\n+\r\n+      <form onSubmit={onSubmit} className=\"flex flex-col gap-4\">\r\n+        {/* تاریخ و ساعت درخواستی */}\r\n+        <div>\r\n+          <label\r\n+            htmlFor=\"requestedDate\"\r\n+            className=\"block mb-1 text-Looking-Glass\"\r\n+          >\r\n+            تاریخ و ساعت درخواستی\r\n+          </label>\r\n+          <DatePicker\r\n+            calendar={persian}\r\n+            locale={persian_fa}\r\n+            format=\"YYYY/MM/DD HH:mm\"\r\n+            value={selectedDate}\r\n+            onChange={setSelectedDate}\r\n+            plugins={[<TimePicker position=\"bottom\" />]}\r\n+            inputClass=\"bg-black border border-white text-center text-white p-1 rounded w-full\"\r\n+            placeholder=\"تاریخ و ساعت را انتخاب کنید\"\r\n+            className=\"w-full p-2 pl-4 text-black bg-black border border-l-4 border-l-Looking-Glass focus:outline-none focus:ring-1 focus:ring-School-Bus\"\r\n+          />\r\n+          {errors.requestedDate && (\r\n+            <p className=\"mt-1 text-sm text-red\">{errors.requestedDate}</p>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {/* نحوه تسویه */}\r\n+        <div>\r\n+          <label\r\n+            htmlFor=\"paymentMethod\"\r\n+            className=\"block mb-1 text-Looking-Glass\"\r\n+          >\r\n+            نحوه تسویه\r\n+          </label>\r\n+          <textarea\r\n+            id=\"paymentMethod\"\r\n+            rows=\"3\"\r\n+            placeholder=\"مثلاً: نقدی، چک، انتقال بانکی...\"\r\n+            className={`w-full p-2 pl-4 text-white border border-l-4 border-l-Looking-Glass bg-black rounded-md focus:outline-none focus:ring-1 focus:ring-School-Bus ${\r\n+              errors.paymentMethod ? \"border-red-500\" : \"\"\r\n+            }`}\r\n+            name=\"paymentMethod\"\r\n+            value={formData.paymentMethod}\r\n+            onChange={handleChange}\r\n+          />\r\n+          {errors.paymentMethod && (\r\n+            <p className=\"mt-1 text-sm text-red\">{errors.paymentMethod}</p>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {/* توضیحات تکمیلی */}\r\n+        <div>\r\n+          <label\r\n+            htmlFor=\"additionalInfo\"\r\n+            className=\"block mb-1 text-Looking-Glass\"\r\n+          >\r\n+            توضیحات تکمیلی\r\n+          </label>\r\n+          <textarea\r\n+            id=\"additionalInfo\"\r\n+            rows=\"4\"\r\n+            placeholder=\"توضیحات اضافی خود را وارد کنید...\"\r\n+            className={`w-full p-2 pl-4 text-white bg-black border border-l-4 rounded-md border-l-Looking-Glass focus:outline-none focus:ring-1 focus:ring-School-Bus ${\r\n+              errors.additionalInfo ? \"border-red-500\" : \"\"\r\n+            }`}\r\n+            name=\"additionalInfo\"\r\n+            value={formData.additionalInfo}\r\n+            onChange={handleChange}\r\n+          />\r\n+          {errors.additionalInfo && (\r\n+            <p className=\"mt-1 text-sm text-red\">{errors.additionalInfo}</p>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {/* دکمه ارسال */}\r\n+        <button\r\n+          type=\"submit\"\r\n+          className=\"px-6 py-2 mt-4 text-black transition-colors duration-200 rounded-md bg-School-Bus hover:bg-yellow-400\"\r\n+        >\r\n+          ارسال فرم\r\n+        </button>\r\n+      </form>\r\n+\r\n+      {/* نمایش مودال */}\r\n+      {isModalOpen && (\r\n+        <Modal message={modalMessage} onClose={() => setIsModalOpen(false)} />\r\n+      )}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default FormPage;\r\n"
                }
            ],
            "date": 1744181353696,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\nimport DatePicker from \"react-multi-date-picker\";\r\nimport TimePicker from \"react-multi-date-picker/plugins/time_picker\";\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// کامپوننت مودال ساده\r\nconst Modal = ({ message, onClose }) => (\r\n  <div className=\"modal-overlay\" onClick={onClose}>\r\n    <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n      <div className=\"relative p-8 text-white border-2 shadow-lg bg-Bokara-Grey border-School-Bus rounded-2xl w-96\">\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute text-lg font-bold top-2 left-2 text-School-Bus\"\r\n        >\r\n          ×\r\n        </button>\r\n        <div className=\"flex flex-col items-center justify-center gap-4\">\r\n          <h3 className=\"text-xl font-semibold text-School-Bus\">پیام سیستم</h3>\r\n          <p className=\"text-center\">{message}</p>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"px-6 py-2 font-medium transition bg-School-Bus text-Bokara-Grey rounded-xl hover:opacity-90\"\r\n          >\r\n            تایید\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\nconst FormPage = () => {\r\n  const { orderId } = useParams();\r\n  const [formData, setFormData] = useState({\r\n    requestedDate: \"\",\r\n    paymentMethod: \"\",\r\n    additionalInfo: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    requestedDate: \"\",\r\n    paymentMethod: \"\",\r\n    additionalInfo: \"\",\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // وضعیت مودال\r\n  const [modalMessage, setModalMessage] = useState(\"\"); // پیام مودال\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let formErrors = {};\r\n    let isValid = true;\r\n\r\n    if (!selectedDate) {\r\n      formErrors.requestedDate = \"لطفاً تاریخ و ساعت را انتخاب کنید\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!formData.paymentMethod) {\r\n      formErrors.paymentMethod = \"لطفاً نحوه تسویه را وارد کنید\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!formData.additionalInfo) {\r\n      formErrors.additionalInfo = \"لطفاً توضیحات را وارد کنید\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(formErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const updateOrder = async (id) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n\r\n    if (!token) {\r\n      toast.warn(\"⛔️ لطفاً وارد شوید تا بتوانید ویرایش کنید.\");\r\n      return;\r\n    }\r\n\r\n    const response = await fetch(\r\n      `https://amin-beton-back.chbk.app/api/orders/${id}/`,\r\n      {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          settlement_type: formData.paymentMethod,\r\n          additional_description: formData.additionalInfo,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (response.ok) {\r\n      setModalMessage(\"سفارش با موفقیت بروزرسانی شد!\"); // تنظیم پیام مودال\r\n      setIsModalOpen(true); // باز کردن مودال\r\n    } else if (response.status === 401) {\r\n      toast.error(\"خطای 401: لطفاً وارد شوید یا توکن معتبر وارد کنید.\");\r\n    } else {\r\n      toast.error(\"خطا در به‌روزرسانی سفارش!\");\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (validateForm()) {\r\n      const formattedDate = selectedDate?.format(\"YYYY/MM/DD HH:mm\");\r\n\r\n      // ارسال داده‌ها به API\r\n      if (orderId) {\r\n        updateOrder(orderId);\r\n      } else {\r\n        toast.error(\"شناسه سفارش موجود نیست!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container p-6 mt-10 rounded-lg shadow-md bg-Bokara-Grey\">\r\n      <h1 className=\"mb-6 text-xl font-bold text-white\">فرم درخواست</h1>\r\n\r\n      <form onSubmit={onSubmit} className=\"flex flex-col gap-4\">\r\n        {/* تاریخ و ساعت درخواستی */}\r\n        <div>\r\n          <label\r\n            htmlFor=\"requestedDate\"\r\n            className=\"block mb-1 text-Looking-Glass\"\r\n          >\r\n            تاریخ و ساعت درخواستی\r\n          </label>\r\n          <DatePicker\r\n            calendar={persian}\r\n            locale={persian_fa}\r\n            format=\"YYYY/MM/DD HH:mm\"\r\n            value={selectedDate}\r\n            onChange={setSelectedDate}\r\n            plugins={[<TimePicker position=\"bottom\" />]}\r\n            inputClass=\"bg-black border border-white text-center text-white p-1 rounded w-full\"\r\n            placeholder=\"تاریخ و ساعت را انتخاب کنید\"\r\n            className=\"w-full p-2 pl-4 text-black bg-black border border-l-4 border-l-Looking-Glass focus:outline-none focus:ring-1 focus:ring-School-Bus\"\r\n          />\r\n          {errors.requestedDate && (\r\n            <p className=\"mt-1 text-sm text-red\">{errors.requestedDate}</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* نحوه تسویه */}\r\n        <div>\r\n          <label\r\n            htmlFor=\"paymentMethod\"\r\n            className=\"block mb-1 text-Looking-Glass\"\r\n          >\r\n            نحوه تسویه\r\n          </label>\r\n          <textarea\r\n            id=\"paymentMethod\"\r\n            rows=\"3\"\r\n            placeholder=\"مثلاً: نقدی، چک، انتقال بانکی...\"\r\n            className={`w-full p-2 pl-4 text-white border border-l-4 border-l-Looking-Glass bg-black rounded-md focus:outline-none focus:ring-1 focus:ring-School-Bus ${\r\n              errors.paymentMethod ? \"border-red-500\" : \"\"\r\n            }`}\r\n            name=\"paymentMethod\"\r\n            value={formData.paymentMethod}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.paymentMethod && (\r\n            <p className=\"mt-1 text-sm text-red\">{errors.paymentMethod}</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* توضیحات تکمیلی */}\r\n        <div>\r\n          <label\r\n            htmlFor=\"additionalInfo\"\r\n            className=\"block mb-1 text-Looking-Glass\"\r\n          >\r\n            توضیحات تکمیلی\r\n          </label>\r\n          <textarea\r\n            id=\"additionalInfo\"\r\n            rows=\"4\"\r\n            placeholder=\"توضیحات اضافی خود را وارد کنید...\"\r\n            className={`w-full p-2 pl-4 text-white bg-black border border-l-4 rounded-md border-l-Looking-Glass focus:outline-none focus:ring-1 focus:ring-School-Bus ${\r\n              errors.additionalInfo ? \"border-red-500\" : \"\"\r\n            }`}\r\n            name=\"additionalInfo\"\r\n            value={formData.additionalInfo}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.additionalInfo && (\r\n            <p className=\"mt-1 text-sm text-red\">{errors.additionalInfo}</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* دکمه ارسال */}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"px-6 py-2 mt-4 text-black transition-colors duration-200 rounded-md bg-School-Bus hover:bg-yellow-400\"\r\n        >\r\n          ارسال فرم\r\n        </button>\r\n      </form>\r\n\r\n      {/* نمایش مودال */}\r\n      {isModalOpen && (\r\n        <Modal message={modalMessage} onClose={() => setIsModalOpen(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormPage;\r\n"
        }
    ]
}