{
    "sourceFile": "src/user-panel/AddProjectForm.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1744159689451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744293370958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,8 +215,9 @@\n               />\r\n               <div className=\"flex justify-center\">\r\n                 <ButtonProject\r\n                   type=\"submit\"\r\n+                  \r\n                   className=\"w-56 py-2 mb-10 font-semibold bg-yellow-500 rounded md:w-72 text-Looking-Glass\"\r\n                   disabled={isSubmitting}\r\n                 >\r\n                   {isSubmitting ? \"در حال ارسال...\" : \"افزودن پروژه\"}\r\n"
                },
                {
                    "date": 1744293385805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,8 +92,9 @@\n   };\r\n \r\n   const handleSubmit = async (e) => {\r\n     e.preventDefault();\r\n+    console.log(\"form submitted\");\r\n     if (!validateForm()) {\r\n       setResponseMessage(\"❌ لطفاً تمام فیلدها را به درستی وارد کنید.\");\r\n       return;\r\n     }\r\n"
                },
                {
                    "date": 1744293457678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,9 +146,12 @@\n     } finally {\r\n       setIsSubmitting(false);\r\n     }\r\n   };\r\n-\r\n+  useEffect(() => {\r\n+    console.log(\"showModal:\", showModal);\r\n+  }, [showModal]);\r\n+  \r\n   return (\r\n     <div className=\"flex items-center justify-center min-h-screen bg-gray-900\">\r\n       <div className=\"w-full p-8 border rounded-lg bg-Bokara-Grey border-School-Bus\">\r\n         <div className=\"flex flex-col items-center justify-center gap-2\">\r\n"
                },
                {
                    "date": 1744293507417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useState } from \"react\";\r\n+// import React, { useState } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import axios from \"axios\";\r\n import Input from \"../ui/Input\";\r\n import MapComponent from \"../ui/MapComponent\";\r\n@@ -11,8 +11,10 @@\n import DatePicker from \"react-multi-date-picker\";\r\n import TimePicker from \"react-multi-date-picker/plugins/time_picker\";\r\n import persian from \"react-date-object/calendars/persian\";\r\n import persian_fa from \"react-date-object/locales/persian_fa\";\r\n+import React, { useState, useEffect } from \"react\";\r\n+\r\n const ProjectAPIPage = () => {\r\n   const [values, setValues] = useState({\r\n     title: \"\",\r\n     description: \"\",\r\n"
                },
                {
                    "date": 1744293775830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,8 +121,10 @@\n             Authorization: `Bearer ${token}`,\r\n           },\r\n         }\r\n       );\r\n+      console.log(\"✅ ارسال موفق بود\");\r\n+      setShowModal(true);\r\n \r\n       setShowModal(true);\r\n       setTimeout(() => {\r\n         setShowModal(false);\r\n"
                }
            ],
            "date": 1744159689451,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Input from \"../ui/Input\";\r\nimport MapComponent from \"../ui/MapComponent\";\r\nimport logo from \"../assets/images/84c17d4db54552e3ecc58781c8cefc7a.png\";\r\nimport ButtonProject from \"../ui/ButtonProject\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\"; // برای استایل‌ها\r\nimport { FaCalendarAlt } from \"react-icons/fa\";\r\nconst ProjectAPIPage = () => {\r\n  const [values, setValues] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    start_date: null, // تغییر از string به null\r\n    end_date: null, // تغییر از string به null\r\n    address: \"\",\r\n    postal_code: \"\",\r\n    registered_plate: \"\",\r\n    case_number: \"\",\r\n    supervising_engineer: \"\",\r\n    builder: \"\",\r\n    employer: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [responseMessage, setResponseMessage] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [coordinates, setCoordinates] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const placeholders = {\r\n    title: \"عنوان پروژه\",\r\n    description: \"توضیحات پروژه\",\r\n    start_date: \"تاریخ شروع پروژه\",\r\n    end_date: \"تاریخ پایان پروژه\",\r\n    address: \"آدرس پروژه\",\r\n    postal_code: \"کد پستی (۱۰ رقمی)\",\r\n    registered_plate: \"شماره پلاک ثبت شده شهرداری\",\r\n    case_number: \"شماره پرونده شهرداری\",\r\n    supervising_engineer: \"نام مهندس ناظر\",\r\n    builder: \"نام سازنده\",\r\n    employer: \"نام کارفرما\",\r\n    type: \"نوع پروژه\",\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleLocationSelect = ([lat, lng]) => {\r\n    setCoordinates({\r\n      latitude: parseFloat(lat.toFixed(8)),\r\n      longitude: parseFloat(lng.toFixed(8)),\r\n    });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    if (!values.title) newErrors.title = \"عنوان پروژه الزامی است\";\r\n    if (!values.description) newErrors.description = \"توضیحات پروژه الزامی است\";\r\n    if (!values.start_date) newErrors.start_date = \"تاریخ شروع الزامی است\";\r\n    if (!values.end_date) newErrors.end_date = \"تاریخ پایان الزامی است\";\r\n    if (\r\n      values.end_date &&\r\n      new Date(values.end_date) < new Date(values.start_date)\r\n    ) {\r\n      newErrors.end_date = \"تاریخ پایان باید بعد از تاریخ شروع باشد\";\r\n    }\r\n    if (!coordinates) newErrors.coordinates = \"مختصات جغرافیایی الزامی است\";\r\n    if (!values.address) newErrors.address = \"آدرس پروژه الزامی است\";\r\n    if (!/^\\d{10}$/.test(values.postal_code)) {\r\n      newErrors.postal_code = \"کد پستی باید ۱۰ رقم باشد\";\r\n    }\r\n    if (!values.registered_plate)\r\n      newErrors.registered_plate = \"شماره پلاک ثبت شده الزامی است\";\r\n    if (!values.case_number) newErrors.case_number = \"شماره پرونده الزامی است\";\r\n    if (!values.supervising_engineer)\r\n      newErrors.supervising_engineer = \"نام مهندس ناظر الزامی است\";\r\n    if (!values.builder) newErrors.builder = \"نام سازنده الزامی است\";\r\n    if (!values.employer) newErrors.employer = \"نام کارفرما الزامی است\";\r\n    if (!values.type) newErrors.type = \"نوع پروژه الزامی است\";\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      setResponseMessage(\"❌ لطفاً تمام فیلدها را به درستی وارد کنید.\");\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (!token) {\r\n      alert(\"⛔ خطا: شما احراز هویت نشده‌اید! به صفحه ورود هدایت می‌شوید.\");\r\n      navigate(\"/LoginForm\");\r\n      setIsSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://amin-beton-back.chbk.app/api/projects/\",\r\n        { ...values, ...coordinates },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      setShowModal(true);\r\n      setTimeout(() => {\r\n        setShowModal(false);\r\n        navigate(\"/ProjectPage\");\r\n      }, 2000);\r\n    } catch (error) {\r\n      console.error(\"❌ خطا در ارسال اطلاعات:\", error);\r\n\r\n      const errData = error.response?.data || {};\r\n      const newErrors = {};\r\n\r\n      if (errData.data) {\r\n        errData.data.forEach((fieldError) => {\r\n          newErrors[fieldError.field] = fieldError.message;\r\n        });\r\n      }\r\n\r\n      if (errData.__non_field_errors) {\r\n        setResponseMessage(errData.__non_field_errors.join(\", \"));\r\n      }\r\n\r\n      setErrors(newErrors);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-900\">\r\n      <div className=\"w-full p-8 border rounded-lg bg-Bokara-Grey border-School-Bus\">\r\n        <div className=\"flex flex-col items-center justify-center gap-2\">\r\n          <div className=\"flex flex-row items-center gap-2 text-3xl text-School-Bus\">\r\n            <span className=\"\">امین</span>\r\n            <img className=\"h-12\" src={logo} alt=\"Company Logo\" />\r\n            <span className=\"\">بتن</span>\r\n          </div>\r\n          <h2 className=\"mb-6 text-sm font-semibold text-center md:text-2xl text-School-Bus\">\r\n            ثبت پروژه جدید\r\n          </h2>\r\n        </div>\r\n\r\n        {/* Display Non-Field Errors */}\r\n        {responseMessage && !Object.keys(errors).length && (\r\n          <div className=\"mb-4 text-center text-red-500\">{responseMessage}</div>\r\n        )}\r\n\r\n        <div className=\"flex items-center justify-center\">\r\n          <div className=\"w-1/2\">\r\n            <form onSubmit={handleSubmit} className=\"justify-center space-y-4\">\r\n              {Object.keys(values).map((key) => (\r\n                <div key={key} className=\"relative\">\r\n                  <label className=\"block mb-1 text-Looking-Glass\">\r\n                    {placeholders[key]}\r\n                  </label>\r\n\r\n                  {/* If the field is a date, use the DatePicker */}\r\n                  {key.includes(\"date\") ? (\r\n                    <div className=\"relative w-full p-1 px-4 py-2 pl-4 text-white bg-gray-700 border rounded ltr-input bg-Bokara-Grey border-l-Looking-Glass focus:outline-none focus:ring-1 focus:ring-School-Bus border-Looking-Glass\">\r\n                      <DatePicker\r\n                        className=\"bg-Bokara-Grey\"\r\n                        selected={values[key]}\r\n                        onChange={(date) =>\r\n                          setValues({ ...values, [key]: date })\r\n                        }\r\n                        dateFormat=\"yyyy/MM/dd\"\r\n                        placeholderText={placeholders[key]}\r\n                      />\r\n                      <FaCalendarAlt className=\"absolute text-yellow-500 transform -translate-y-1/2 right-3 top-1/2\" />\r\n                    </div>\r\n                  ) : (\r\n                    <Input\r\n                      type=\"text\"\r\n                      name={key}\r\n                      value={values[key]}\r\n                      onChange={handleChange}\r\n                      className=\"w-full p-1 px-4 py-2 pl-4 text-white bg-gray-700 border rounded ltr-input bg-Bokara-Grey border-l-Looking-Glass focus:outline-none focus:ring-1 focus:ring-School-Bus border-Looking-Glass\"\r\n                    />\r\n                  )}\r\n\r\n                  {errors[key] && (\r\n                    <div className=\"absolute text-sm text-red\">\r\n                      {errors[key]}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n              <MapComponent\r\n                width=\"100%\"\r\n                height=\"300px\"\r\n                onLocationSelect={handleLocationSelect}\r\n              />\r\n              <div className=\"flex justify-center\">\r\n                <ButtonProject\r\n                  type=\"submit\"\r\n                  className=\"w-56 py-2 mb-10 font-semibold bg-yellow-500 rounded md:w-72 text-Looking-Glass\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  {isSubmitting ? \"در حال ارسال...\" : \"افزودن پروژه\"}\r\n                </ButtonProject>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal for success message */}\r\n      {showModal && (\r\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\">\r\n          <div className=\"p-6 text-center bg-white rounded-lg shadow-lg\">\r\n            <h2 className=\"mb-4 text-lg font-bold text-green-600\">\r\n              ✅ پروژه با موفقیت ثبت شد!\r\n            </h2>\r\n            <button\r\n              onClick={() => setShowModal(false)}\r\n              className=\"px-4 py-2 font-semibold text-white bg-green-500 rounded\"\r\n            >\r\n              بستن\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectAPIPage;\r\n"
        }
    ]
}