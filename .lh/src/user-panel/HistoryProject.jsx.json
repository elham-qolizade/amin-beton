{
    "sourceFile": "src/user-panel/HistoryProject.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1744154697144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744154882499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -285,21 +285,8 @@\n     }\r\n   };\r\n \r\n   // تابع برای دریافت فاکتورها\r\n-  // const getInvoices = async () => {\r\n-  //   try {\r\n-  //     const response = await axios.get(\r\n-  //       `https://amin-beton-back.chbk.app/api/orders/${id}/get-order-invoices/`,\r\n-  //       {\r\n-  //         headers: { Authorization: `Bearer ${token}` },\r\n-  //       }\r\n-  //     );\r\n-  //     setInvoices(response.data); // داده‌ها را به روز می‌کند\r\n-  //   } catch (error) {\r\n-  //     console.error(\"Error fetching invoices:\", error);\r\n-  //   }\r\n-  // };\r\n \r\n   const handleStatusButtonClick = (invoice) => {\r\n     const selectedStatus = invoiceStatuses[invoice.id];\r\n \r\n"
                },
                {
                    "date": 1744155177766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -488,71 +488,9 @@\n               <button onClick={() => fetchAndDownloadInvoice(id)}>\r\n                 📥 دانلود پیش‌فاکتور\r\n               </button>\r\n \r\n-              {invoices.length === 0 ? (\r\n-                <p>هیچ فاکتوری موجود نیست.</p>\r\n-              ) : (\r\n-                invoices.map((invoice) => (\r\n-                  <div\r\n-                    key={invoice.id}\r\n-                    style={{\r\n-                      border: \"1px solid #ccc\",\r\n-                      padding: \"10px\",\r\n-                      margin: \"10px\",\r\n-                    }}\r\n-                  >\r\n-                    <p>💰 مبلغ: {invoice.price}</p>\r\n-                    <p>\r\n-                      📄 وضعیت:{\" \"}\r\n-                      {invoice.status === 1\r\n-                        ? \"در انتظار تایید\"\r\n-                        : invoice.status === 2\r\n-                        ? \"رد شده\"\r\n-                        : \"تایید شده\"}\r\n-                    </p>\r\n-                    {invoice.status === 3 && invoice.deny_reason && (\r\n-                      <p>🛑 دلیل رد: {invoice.deny_reason}</p>\r\n-                    )}\r\n-                    {invoice.status === 1 && (\r\n-                      <div>\r\n-                        <select\r\n-                          onChange={(e) =>\r\n-                            setInvoiceStatuses((prev) => ({\r\n-                              ...prev,\r\n-                              [invoice.id]: e.target.value,\r\n-                            }))\r\n-                          }\r\n-                        >\r\n-                          <option value=\"\">-- انتخاب وضعیت --</option>\r\n-                          <option value=\"approved\">✅ تایید</option>\r\n-                          <option value=\"rejected\">❌ رد</option>\r\n-                        </select>\r\n-\r\n-                        {invoiceStatuses[invoice.id] === \"rejected\" && (\r\n-                          <input\r\n-                            type=\"text\"\r\n-                            placeholder=\"دلیل رد\"\r\n-                            onChange={(e) =>\r\n-                              setDenyReasons((prev) => ({\r\n-                                ...prev,\r\n-                                [invoice.id]: e.target.value,\r\n-                              }))\r\n-                            }\r\n-                          />\r\n-                        )}\r\n-                        <div className=\"py-10 border-b border-white bg-School-Bus\">\r\n-                          <button\r\n-                            onClick={() => handleStatusButtonClick(invoice)}\r\n-                          >\r\n-                            ثبت وضعیت\r\n-                          </button>\r\n-                        </div>\r\n-                      </div>\r\n-                    )}\r\n-                  </div>\r\n-                ))\r\n-              )}\r\n+        \r\n             </div>\r\n             <button onClick={() => handleStatusChange()}>ثبت وضعیت</button>\r\n             <div className=\"py-10 border-b border-white\">\r\n               <ButtonProject\r\n"
                },
                {
                    "date": 1744155243354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,13 @@\n   const [denyReasons, setDenyReasons] = useState({});\r\n   const [location, setLocation] = useState(null);\r\n   const [selectedImei, setSelectedImei] = useState(null);\r\n   const { id } = useParams();\r\n+  const statusMap = {\r\n+    1: \"در انتظار بررسی\",\r\n+    2: \"تایید شده\",\r\n+    3: \"رد شده\"\r\n+  };\r\n   // مقدار orderId رو ست کن وقتی کامپوننت لود میشه\r\n   // این قسمت رو اصلاح کن\r\n   useEffect(() => {\r\n     if (id) {\r\n"
                },
                {
                    "date": 1744155275949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,32 @@\n     1: \"در انتظار بررسی\",\r\n     2: \"تایید شده\",\r\n     3: \"رد شده\",\r\n   };\r\n+  if (!invoices || invoices.length === 0) {\r\n+    return <p className=\"text-center text-gray-500\">پیش‌فاکتوری ثبت نشده</p>;\r\n+  }\r\n+\r\n+  const [statusUpdates, setStatusUpdates] = useState({});\r\n+  const [loading, setLoading] = useState(false);\r\n+\r\n+  const handleStatusChange = async (id, newStatus, reason) => {\r\n+    setLoading(true);\r\n+    try {\r\n+      await axios.post(\"https://amin-beton-back.chbk.app/api/invoices/change_invoice_status/\", {\r\n+        id,\r\n+        status: newStatus,\r\n+        deny_reason: reason || \"\"\r\n+      });\r\n+      alert(\"عملیات با موفقیت انجام شد.\");\r\n+      window.location.reload(); // رفرش صفحه\r\n+    } catch (error) {\r\n+      console.error(error);\r\n+      alert(\"خطایی رخ داد.\");\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n   // مقدار orderId رو ست کن وقتی کامپوننت لود میشه\r\n   // این قسمت رو اصلاح کن\r\n   useEffect(() => {\r\n     if (id) {\r\n@@ -172,46 +196,46 @@\n       }\r\n     }\r\n   };\r\n \r\n-  const handleStatusChange = async (invoiceId, status, denyReason = \"\") => {\r\n-    if (!invoiceId) {\r\n-      console.error(\"❌ شناسه فاکتور معتبر نیست.\");\r\n-      alert(\"⚠️ شناسه فاکتور معتبر نیست.\");\r\n-      return;\r\n-    }\r\n+  // const handleStatusChange = async (invoiceId, status, denyReason = \"\") => {\r\n+  //   if (!invoiceId) {\r\n+  //     console.error(\"❌ شناسه فاکتور معتبر نیست.\");\r\n+  //     alert(\"⚠️ شناسه فاکتور معتبر نیست.\");\r\n+  //     return;\r\n+  //   }\r\n \r\n-    const data = {\r\n-      invoice_id: invoiceId,\r\n-      status: status === \"approved\" ? 1 : 2, // فرض بر اینکه وضعیت عددی است\r\n-      deny_reason: status === \"rejected\" ? denyReason : \"\",\r\n-    };\r\n+  //   const data = {\r\n+  //     invoice_id: invoiceId,\r\n+  //     status: status === \"approved\" ? 1 : 2, // فرض بر اینکه وضعیت عددی است\r\n+  //     deny_reason: status === \"rejected\" ? denyReason : \"\",\r\n+  //   };\r\n \r\n-    try {\r\n-      const url = `https://amin-beton-back.chbk.app/api/invoices/${invoiceId}/change-invoice-status/`;\r\n-      console.log(\"API URL:\", url); // لاگ URL برای بررسی\r\n+  //   try {\r\n+  //     const url = `https://amin-beton-back.chbk.app/api/invoices/${invoiceId}/change-invoice-status/`;\r\n+  //     console.log(\"API URL:\", url); // لاگ URL برای بررسی\r\n \r\n-      await axios.post(url, data, {\r\n-        headers: {\r\n-          \"Content-Type\": \"application/json\",\r\n-          Authorization: `Bearer ${token}`,\r\n-        },\r\n-      });\r\n+  //     await axios.post(url, data, {\r\n+  //       headers: {\r\n+  //         \"Content-Type\": \"application/json\",\r\n+  //         Authorization: `Bearer ${token}`,\r\n+  //       },\r\n+  //     });\r\n \r\n-      // لاگ کردن invoiceId، status و denyReason\r\n-      console.log(\"Invoice ID:\", invoiceId);\r\n-      console.log(\"Status:\", status);\r\n-      console.log(\"Deny Reason:\", denyReason);\r\n+  //     // لاگ کردن invoiceId، status و denyReason\r\n+  //     console.log(\"Invoice ID:\", invoiceId);\r\n+  //     console.log(\"Status:\", status);\r\n+  //     console.log(\"Deny Reason:\", denyReason);\r\n \r\n-      // به‌روزرسانی لیست فاکتورها\r\n-      getInvoices(); // اینجا تابعی است که لیست فاکتورها را دوباره می‌گیرد\r\n+  //     // به‌روزرسانی لیست فاکتورها\r\n+  //     getInvoices(); // اینجا تابعی است که لیست فاکتورها را دوباره می‌گیرد\r\n \r\n-      alert(\"✅ وضعیت فاکتور با موفقیت تغییر کرد.\");\r\n-    } catch (error) {\r\n-      console.error(\"❌ خطا در تغییر وضعیت:\", error);\r\n-      alert(\"⚠️ تغییر وضعیت انجام نشد.\");\r\n-    }\r\n-  };\r\n+  //     alert(\"✅ وضعیت فاکتور با موفقیت تغییر کرد.\");\r\n+  //   } catch (error) {\r\n+  //     console.error(\"❌ خطا در تغییر وضعیت:\", error);\r\n+  //     alert(\"⚠️ تغییر وضعیت انجام نشد.\");\r\n+  //   }\r\n+  // };\r\n \r\n   // Get Token from Local Storage\r\n   const token = localStorage.getItem(\"accessToken\");\r\n   if (!token) {\r\n"
                },
                {
                    "date": 1744155353182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -519,8 +519,9 @@\n             <div className=\"py-10 border-b border-white bg-School-Bus\">\r\n               <button onClick={() => fetchAndDownloadInvoice(id)}>\r\n                 📥 دانلود پیش‌فاکتور\r\n               </button>\r\n+              \r\n             </div>\r\n             <button onClick={() => handleStatusChange()}>ثبت وضعیت</button>\r\n             <div className=\"py-10 border-b border-white\">\r\n               <ButtonProject\r\n"
                }
            ],
            "date": 1744154697144,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport HeaderNav from \"../ui/HeadingNav\";\r\nimport ProjectHeading from \"../ui/projectHeading\";\r\nimport ButtonProject from \"../ui/ButtonProject\";\r\nimport ProgressCircle from \"../ui/ProgressCircl\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { VehicleTracking } from \"../constans/index\";\r\n\r\nimport { MdOutlineFileDownload } from \"react-icons/md\";\r\nimport MapComponent from \"../ui/MapComponent\";\r\nconst HistoryProject = () => {\r\n  const [factor, setFactor] = useState(null);\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [bills, setBills] = useState([]);\r\n  const [reportContent, setReportContent] = useState(\"\"); // ✅ اضافه کردن reportContent\r\n  // دریافت orderId از URL\r\n  // const [invoices, setInvoices] = useState([]);\r\n  const [actionData, setActionData] = useState({});\r\n  const [denyReasons, setDenyReasons] = useState({});\r\n  const [location, setLocation] = useState(null);\r\n  const [selectedImei, setSelectedImei] = useState(null);\r\n  const { id } = useParams();\r\n  // مقدار orderId رو ست کن وقتی کامپوننت لود میشه\r\n  // این قسمت رو اصلاح کن\r\n  useEffect(() => {\r\n    if (id) {\r\n      handleStatusChange();\r\n      fetchAndDownloadInvoice(id); // برای دریافت فاکتورها\r\n      getBillsOfLading(id); // برای دریافت بارنامه‌ها\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Received Order ID:\", id); // اضافه کردن این خط\r\n\r\n    if (id) {\r\n      // downloadFactorReport(id); // ارسال id به توابع\r\n      // getInvoices(id);\r\n    }\r\n    getCategories(); // همیشه اجرا بشه\r\n  }, [id]);\r\n  const handleShowLocation = (imei) => {\r\n    setSelectedImei(imei); // IMEI انتخاب شده را ذخیره می‌کنیم\r\n    getLocation(imei).then((location) => {\r\n      setLocations((prevLocations) => ({\r\n        ...prevLocations,\r\n        [imei]: location,\r\n      }));\r\n    }); // فرض می‌کنیم getLocation یک Promise برمی‌گرداند که موقعیت را می‌دهد\r\n  };\r\n\r\n  const handleUpdateLocation = (imei) => {\r\n    getLocation(imei).then((location) => {\r\n      setLocations((prevLocations) => ({\r\n        ...prevLocations,\r\n        [imei]: location,\r\n      }));\r\n    }); // بروزرسانی موقعیت\r\n  };\r\n\r\n  const navigate = useNavigate(); // استفاده از useNavigate برای هدایت به صفحه ورود\r\n\r\n  // تابع دانلود و نمایش گزارش\r\n  const downloadAndViewReport = async (reportUrl) => {\r\n    try {\r\n      const response = await axios.get(reportUrl, {\r\n        responseType: \"blob\", // دریافت به صورت blob برای دانلود فایل\r\n      });\r\n\r\n      // ایجاد لینک دانلود\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", \"report.pdf\"); // تغییر نام فایل به گزارش\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n\r\n      // خواندن و نمایش محتویات گزارش\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setReportContent(e.target.result); // ذخیره محتویات برای نمایش\r\n      };\r\n      reader.readAsText(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error downloading report:\", error);\r\n    }\r\n  };\r\n\r\n  // تابع ایجاد و دانلود فایل گزارش فاکتور ✅\r\n  const downloadFactorReport = async (orderId) => {\r\n    if (!orderId || isNaN(orderId)) {\r\n      alert(\"⚠️ لطفاً یک شناسه معتبر وارد کنید.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://amin-beton-back.chbk.app/api/orders/get-order-factor/\",\r\n        {\r\n          order_id: parseInt(orderId),\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      const factor = response.data;\r\n      const invoiceId = factor.invoice_id; // فرض بر اینکه invoice_id در پاسخ موجود است\r\n      console.log(\"Invoice ID extracted from response:\", invoiceId);\r\n      if (!factor) {\r\n        alert(\"⛔ فاکتوری برای این سفارش ثبت نشده.\");\r\n        return;\r\n      }\r\n\r\n      // استخراج invoiceId از داده‌های پاسخ\r\n      // const invoiceId = factor.invoice_id; // فرض بر اینکه invoice_id در پاسخ موجود است\r\n\r\n      if (!invoiceId) {\r\n        alert(\"⛔ شناسه فاکتور پیدا نشد.\");\r\n        return;\r\n      }\r\n\r\n      // نمایش قیمت و فایل در Console یا UI (اختیاری)\r\n      console.log(\"💰 قیمت:\", factor.price);\r\n      console.log(\"🧾 فایل فاکتور:\", factor.invoice_file);\r\n\r\n      const factorContent = `\r\n        📄 گزارش پیش‌فاکتور\r\n        =========================\r\n        💰 مبلغ: ${factor.price}\r\n        📝 توضیحات: ${factor.report || \"گزارشی ثبت نشده\"}\r\n        =========================\r\n      `;\r\n\r\n      const blob = new Blob([factorContent], { type: \"text/plain\" });\r\n      const url = window.URL.createObjectURL(blob);\r\n\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", `factor_report_${orderId}.txt`);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n\r\n      alert(\"✅ فایل گزارش با موفقیت دانلود شد.\");\r\n\r\n      // فراخوانی تابع handleStatusChange با invoiceId\r\n      const status = \"approved\"; // فرضی: می‌توانید وضعیت را به دلخواه تنظیم کنید\r\n      const denyReason = \"\"; // فرضی: اگر وضعیت \"rejected\" باشد، دلیل رد را ارسال کنید\r\n      handleStatusChange(invoiceId, status, denyReason);\r\n    } catch (error) {\r\n      if (error.response?.status === 404) {\r\n        alert(\"⛔ فاکتوری برای این سفارش ثبت نشده.\");\r\n      } else {\r\n        console.error(\r\n          \"❌ خطا در دریافت فاکتور:\",\r\n          error.response?.data || error\r\n        );\r\n        alert(\"⚠️ خطایی در دریافت فاکتور رخ داده است.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (invoiceId, status, denyReason = \"\") => {\r\n    if (!invoiceId) {\r\n      console.error(\"❌ شناسه فاکتور معتبر نیست.\");\r\n      alert(\"⚠️ شناسه فاکتور معتبر نیست.\");\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      invoice_id: invoiceId,\r\n      status: status === \"approved\" ? 1 : 2, // فرض بر اینکه وضعیت عددی است\r\n      deny_reason: status === \"rejected\" ? denyReason : \"\",\r\n    };\r\n\r\n    try {\r\n      const url = `https://amin-beton-back.chbk.app/api/invoices/${invoiceId}/change-invoice-status/`;\r\n      console.log(\"API URL:\", url); // لاگ URL برای بررسی\r\n\r\n      await axios.post(url, data, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      // لاگ کردن invoiceId، status و denyReason\r\n      console.log(\"Invoice ID:\", invoiceId);\r\n      console.log(\"Status:\", status);\r\n      console.log(\"Deny Reason:\", denyReason);\r\n\r\n      // به‌روزرسانی لیست فاکتورها\r\n      getInvoices(); // اینجا تابعی است که لیست فاکتورها را دوباره می‌گیرد\r\n\r\n      alert(\"✅ وضعیت فاکتور با موفقیت تغییر کرد.\");\r\n    } catch (error) {\r\n      console.error(\"❌ خطا در تغییر وضعیت:\", error);\r\n      alert(\"⚠️ تغییر وضعیت انجام نشد.\");\r\n    }\r\n  };\r\n\r\n  // Get Token from Local Storage\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  if (!token) {\r\n    alert(\"⛔ خطا: شما احراز هویت نشده‌اید! به صفحه ورود هدایت می‌شوید.\");\r\n    navigate(\"/LoginForm\");\r\n    return;\r\n  }\r\n\r\n  // Get Order Factor\r\n\r\n  // Get Order Invoices\r\n\r\n  useEffect(() => {\r\n    if (id) getBillsOfLading(id);\r\n  }, [id]);\r\n\r\n  const getBillsOfLading = async (orderId) => {\r\n    console.log(\"Order ID:\", orderId);\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `https://amin-beton-back.chbk.app/api/orders/${orderId}/get-bills-of-lading/`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      console.log(\"API Response:\", response.data);\r\n      setBills(response.data); // مطمئن شو که داده‌ها به درستی ذخیره می‌شن\r\n    } catch (error) {\r\n      console.error(\"Error fetching bills of lading:\", error);\r\n    }\r\n  };\r\n\r\n  // کامپوننت MapComponent\r\n\r\n  const fetchAndDownloadInvoice = async (orderId) => {\r\n    console.log(\"Order ID received:\", orderId); // چاپ مقدار orderId در کنسول\r\n\r\n    if (!orderId || isNaN(orderId)) {\r\n      alert(\"⚠️ لطفاً یک شناسه معتبر وارد کنید.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://amin-beton-back.chbk.app/api/orders/get-order-invoices/\",\r\n        { order_id: parseInt(orderId) },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(\"API Response:\", response.data); // چاپ پاسخ API\r\n\r\n      const invoices = response.data;\r\n\r\n      if (!invoices || invoices.length === 0) {\r\n        alert(\"⛔ هیچ پیش‌فاکتوری برای این سفارش ثبت نشده.\");\r\n        return;\r\n      }\r\n\r\n      const invoice = invoices[0];\r\n\r\n      if (!invoice.invoice_file) {\r\n        alert(\"⚠️ پیش‌فاکتور یافت شد اما فایل ندارد.\");\r\n        return;\r\n      }\r\n\r\n      // ادامه کد شما...\r\n    } catch (error) {\r\n      console.error(\"❌ خطا در دریافت فاکتورها:\", error);\r\n      alert(\"⚠️ مشکلی در دریافت یا دانلود پیش آمد.\");\r\n    }\r\n  };\r\n\r\n  // تابع برای دریافت فاکتورها\r\n  // const getInvoices = async () => {\r\n  //   try {\r\n  //     const response = await axios.get(\r\n  //       `https://amin-beton-back.chbk.app/api/orders/${id}/get-order-invoices/`,\r\n  //       {\r\n  //         headers: { Authorization: `Bearer ${token}` },\r\n  //       }\r\n  //     );\r\n  //     setInvoices(response.data); // داده‌ها را به روز می‌کند\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching invoices:\", error);\r\n  //   }\r\n  // };\r\n\r\n  const handleStatusButtonClick = (invoice) => {\r\n    const selectedStatus = invoiceStatuses[invoice.id];\r\n\r\n    // بررسی وضعیت انتخاب شده\r\n    if (!selectedStatus) {\r\n      alert(\"لطفاً وضعیت را انتخاب کنید.\");\r\n      return;\r\n    }\r\n\r\n    // اگر وضعیت \"رد\" باشد، باید دلیل رد وارد شود\r\n    if (selectedStatus === \"rejected\" && !denyReasons[invoice.id]) {\r\n      alert(\"لطفاً دلیل رد را وارد کنید.\");\r\n      return;\r\n    }\r\n\r\n    // در غیر این صورت وضعیت را تغییر می‌دهیم\r\n    handleStatusChange(invoice.id, selectedStatus, denyReasons[invoice.id]);\r\n  };\r\n\r\n  // Get Lab Categories\r\n  const getCategories = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://amin-beton-back.chbk.app/api/lab-result-category/\",\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (response.data) {\r\n        setCategories(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching categories:\", error);\r\n    }\r\n  };\r\n  // تابع برای دریافت موقعیت جغرافیایی با استفاده از IMEI\r\n\r\n  // Approve/Reject Invoice\r\n\r\n  const downloadLabCategoriesReport = () => {\r\n    if (!categories || categories.length === 0) {\r\n      alert(\"⚠️ هیچ اطلاعاتی از دسته‌بندی‌های آزمایشگاه وجود ندارد!\");\r\n      return;\r\n    }\r\n\r\n    let labContent = `📚 Lab Categories Report (Order ID: ${id})\\n=========================\\n`;\r\n    categories.forEach((cat) => {\r\n      labContent += `Category: ${cat.title}\\n`;\r\n      if (cat.tests && cat.tests.length > 0) {\r\n        labContent += \"Tests:\\n\";\r\n        cat.tests.forEach((test) => {\r\n          labContent += `  - ${test.name}\\n`;\r\n        });\r\n      } else {\r\n        labContent += \"  No tests available\\n\";\r\n      }\r\n      labContent += \"=========================\\n\";\r\n    });\r\n\r\n    const blob = new Blob([labContent], { type: \"text/plain\" });\r\n    const url = window.URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.setAttribute(\"download\", `lab_categories_report_${id}.txt`);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const getStatusText = (status) => {\r\n    switch (status) {\r\n      case 1:\r\n        return \"خرید اولیه\";\r\n      case 2:\r\n        return \"بررسی امین بتن\";\r\n      case 3:\r\n        return \"صدور پیش فاکتور\";\r\n      case 4:\r\n        return \"تایید پیش فاکتور\";\r\n      case 5:\r\n        return \"ارسال سفارش\";\r\n      case 6:\r\n        return \"دریافت\";\r\n      case 7:\r\n        return \"اتمام فرآیند\";\r\n      default:\r\n        return \"نامشخص\";\r\n    }\r\n  };\r\n\r\n  const getLocation = async (imei) => {\r\n    try {\r\n      // داده‌های دستی برای موقعیت\r\n      const locationData = {\r\n        latitude: 35.602496,\r\n        longitude: 51.308115,\r\n      };\r\n\r\n      // به‌روزرسانی state با داده‌های دستی\r\n      setLocation(locationData);\r\n\r\n      // اگر می‌خواهید از axios هم استفاده کنید برای تست:\r\n      // const response = await axios.post(\r\n      //   \"https://amin-beton-back.chbk.app/api/bills-of-lading-management/get-location/\",\r\n      //   { imei },\r\n      //   { headers: { Authorization: `Bearer ${token}` } }\r\n      // );\r\n      // if (response.data) {\r\n      //   setLocation(response.data); // موقعیت را در state ذخیره می‌کنیم\r\n      // }\r\n    } catch (error) {\r\n      console.error(\"Error fetching location:\", error);\r\n    }\r\n  };\r\n  const getInvoices = async () => {\r\n    try {\r\n      const orderId = 82;\r\n\r\n      // درخواست برای دریافت لیست اینویس‌ها از API\r\n      const response = await axios.post(\r\n        \"https://amin-beton-back.chbk.app/api/orders/get-order-invoices/\",\r\n        {\r\n          order_id: orderId, // ارسال order_id به عنوان بدنه درخواست\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`, // ارسال توکن برای احراز هویت\r\n          },\r\n        }\r\n      );\r\n\r\n      const invoices = response.data; // فرض بر اینکه داده‌ها در invoices قرار دارند\r\n\r\n      // اگر اینویس‌ها خالی بود\r\n      if (!invoices || invoices.length === 0) {\r\n        alert(\"⛔ هیچ اینویسی پیدا نشد.\");\r\n        return;\r\n      }\r\n\r\n      // نمایش لیست اینویس‌ها در کنسول\r\n      console.log(\"لیست اینویس‌ها:\", invoices);\r\n\r\n      // در اینجا می‌توانید اینویس‌ها را در UI نمایش دهید یا هر عمل دیگری انجام دهید\r\n      invoices.forEach((invoice) => {\r\n        console.log(`اینویس ${invoice.id}:`, invoice);\r\n      });\r\n    } catch (error) {\r\n      // console.error(\"❌ خطا در دریافت اینویس‌ها:\", error);\r\n      // alert(\"⚠️ خطا در دریافت اینویس‌ها.\");\r\n    }\r\n  };\r\n\r\n  // فراخوانی تابع اصلی\r\n  getInvoices();\r\n\r\n  // فراخوانی تابع اصلی برای دریافت اینویس‌ها\r\n  getInvoices();\r\n\r\n  // داخل کامپوننت HistoryProject\r\n  return (\r\n    <div className=\"min-h-screen bg-b-gray\">\r\n      <HeaderNav className=\"mx-auto\" />\r\n      <ProjectHeading />\r\n\r\n      <div className=\"container flex flex-row-reverse justify-between w-full gap-10 \">\r\n        <div className=\"flex flex-row\">\r\n          <div>\r\n            <ProgressCircle status={1} />{\" \"}\r\n            <p className=\"mt-2 text-center text-white\">\r\n              وضعیت: {getStatusText(1)}{\" \"}\r\n            </p>{\" \"}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col text-right \">\r\n          {/* ❌ اطلاعات روی صفحه مخفی شد */}\r\n          {/* {factor && (...) } */}\r\n          {/* {invoices.map((invoice) => (...))} */}\r\n          {/* {categories.map((cat) => (...))} */}\r\n\r\n          {/* ✅ دکمه‌های دانلود همچنان کار می‌کنند */}\r\n          <div className=\"flex flex-col gap-2\">\r\n            <div className=\"py-10 border-b border-white \">\r\n              <p className=\"text-sm text-School-Bus md:text-base\">\r\n                ارسال این خرید در تاریخ 1402/10/22 و ساعت 12:30 ثبت شد\r\n              </p>\r\n            </div>\r\n            <div className=\"py-10 border-b border-white\">\r\n              <button onClick={() => downloadFactorReport(id)}>\r\n                📥 دانلود گزارش فاکتور\r\n              </button>\r\n            </div>\r\n            <div className=\"py-10 border-b border-white bg-School-Bus\">\r\n              <button onClick={() => fetchAndDownloadInvoice(id)}>\r\n                📥 دانلود پیش‌فاکتور\r\n              </button>\r\n\r\n              {invoices.length === 0 ? (\r\n                <p>هیچ فاکتوری موجود نیست.</p>\r\n              ) : (\r\n                invoices.map((invoice) => (\r\n                  <div\r\n                    key={invoice.id}\r\n                    style={{\r\n                      border: \"1px solid #ccc\",\r\n                      padding: \"10px\",\r\n                      margin: \"10px\",\r\n                    }}\r\n                  >\r\n                    <p>💰 مبلغ: {invoice.price}</p>\r\n                    <p>\r\n                      📄 وضعیت:{\" \"}\r\n                      {invoice.status === 1\r\n                        ? \"در انتظار تایید\"\r\n                        : invoice.status === 2\r\n                        ? \"رد شده\"\r\n                        : \"تایید شده\"}\r\n                    </p>\r\n                    {invoice.status === 3 && invoice.deny_reason && (\r\n                      <p>🛑 دلیل رد: {invoice.deny_reason}</p>\r\n                    )}\r\n                    {invoice.status === 1 && (\r\n                      <div>\r\n                        <select\r\n                          onChange={(e) =>\r\n                            setInvoiceStatuses((prev) => ({\r\n                              ...prev,\r\n                              [invoice.id]: e.target.value,\r\n                            }))\r\n                          }\r\n                        >\r\n                          <option value=\"\">-- انتخاب وضعیت --</option>\r\n                          <option value=\"approved\">✅ تایید</option>\r\n                          <option value=\"rejected\">❌ رد</option>\r\n                        </select>\r\n\r\n                        {invoiceStatuses[invoice.id] === \"rejected\" && (\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"دلیل رد\"\r\n                            onChange={(e) =>\r\n                              setDenyReasons((prev) => ({\r\n                                ...prev,\r\n                                [invoice.id]: e.target.value,\r\n                              }))\r\n                            }\r\n                          />\r\n                        )}\r\n                        <div className=\"py-10 border-b border-white bg-School-Bus\">\r\n                          <button\r\n                            onClick={() => handleStatusButtonClick(invoice)}\r\n                          >\r\n                            ثبت وضعیت\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n            <button onClick={() => handleStatusChange()}>ثبت وضعیت</button>\r\n            <div className=\"py-10 border-b border-white\">\r\n              <ButtonProject\r\n                onClick={downloadLabCategoriesReport}\r\n                className=\"text-green-500\"\r\n              >\r\n                📥 دانلود آزمایشگاه\r\n              </ButtonProject>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-4 text-white bg-gray-800 rounded-lg\">\r\n        {\" \"}\r\n        <div className=\"grid grid-cols-1 gap-6 py-6 mt-4 md:grid-cols-2\">\r\n          {/* نمایش بارنامه‌ها */}\r\n          <div className=\"grid grid-cols-1 gap-6 py-6 mt-4 md:grid-cols-2\">\r\n            {bills.map((bill) => (\r\n              <div\r\n                key={bill.id}\r\n                className=\"p-4 bg-gray-900 border border-gray-600 rounded-xl shadow-md flex flex-col gap-4 transition-all duration-300 hover:scale-[1.02]\"\r\n              >\r\n                <div className=\"flex flex-col items-start justify-between gap-6 md:flex-row md:items-center\">\r\n                  {/* سمت راست: اطلاعات بارنامه */}\r\n                  <div className=\"flex flex-col w-full gap-4 md:w-1/2\">\r\n                    <div>\r\n                      <p className=\"mt-1 text-sm text-School-Bus\">در مسیر</p>\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col gap-4 text-sm\">\r\n                      <div className=\"flex flex-col gap-2\">\r\n                        <p>\r\n                          نام راننده:{\" \"}\r\n                          <span className=\"font-medium\">\r\n                            {bill.driver.driver_name}\r\n                          </span>\r\n                        </p>\r\n                        <p>\r\n                          <span className=\"font-medium\">\r\n                            شماره موبایل راننده:\r\n                            {bill.driver.driver_mobile}\r\n                          </span>\r\n                        </p>\r\n                        <p>\r\n                          شماره بارنامه:{\" \"}\r\n                          <span className=\"font-medium\">\r\n                            {bill.bill_of_lading_id}\r\n                          </span>\r\n                        </p>\r\n                        <p>\r\n                          شماره پلاک:{\" \"}\r\n                          <span className=\"font-medium\">\r\n                            {bill.driver.plate_number_2}{\" \"}\r\n                            {bill.driver.plate_number_alphabet}{\" \"}\r\n                            {bill.driver.plate_number_3} -{\" \"}\r\n                            {bill.driver.plate_number_iran}\r\n                          </span>\r\n                        </p>\r\n                      </div>\r\n\r\n                      <div className=\"flex flex-col gap-2\">\r\n                        <p>\r\n                          تاریخ بارنامه:{\" \"}\r\n                          <span className=\"font-medium\">\r\n                            {bill.bill_of_lading_date}\r\n                          </span>\r\n                        </p>\r\n                        <p>\r\n                          زمان بارنامه:{\" \"}\r\n                          <span className=\"font-medium\">\r\n                            {bill.bill_of_lading_time}\r\n                          </span>\r\n                        </p>\r\n                        <p>\r\n                          وزن خالص:{\" \"}\r\n                          <span className=\"font-medium\">\r\n                            {bill.net_weight} کیلوگرم\r\n                          </span>\r\n                        </p>\r\n                        <p>\r\n                          مقصد:{\" \"}\r\n                          <span className=\"font-medium\">\r\n                            {bill.destination}\r\n                          </span>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* سمت چپ: اطلاعات دستگاه */}\r\n                  <div className=\"w-full md:w-1/2\">\r\n                    <p>\r\n                      وزن خالی:{\" \"}\r\n                      <span className=\"font-medium\">\r\n                        {bill.empty_weight} کیلوگرم\r\n                      </span>\r\n                    </p>\r\n                    <p>\r\n                      وزن پر:{\" \"}\r\n                      <span className=\"font-medium\">\r\n                        {bill.total_weight} کیلوگرم\r\n                      </span>\r\n                    </p>\r\n                    <p>\r\n                      وزن خالص:{\" \"}\r\n                      <span className=\"font-medium\">\r\n                        {bill.net_weight} کیلوگرم\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <ButtonProject\r\n                  onClick={() => handleShowLocation(bill.device.IMEI)} // هنگام کلیک، IMEI انتخاب شده ذخیره می‌شود\r\n                >\r\n                  {selectedImei === bill.device.IMEI\r\n                    ? \"🔄 بروزرسانی موقعیت\"\r\n                    : \"📍 نمایش روی نقشه\"}\r\n                </ButtonProject>\r\n                <div>\r\n                  {selectedImei === bill.device.IMEI && location && (\r\n                    <div className=\"mt-6\">\r\n                      <h3 className=\"text-lg font-semibold\">موقعیت راننده</h3>\r\n                      <MapComponent\r\n                        latitude={location.latitude}\r\n                        longitude={location.longitude}\r\n                        width=\"100%\"\r\n                        height=\"400px\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryProject;\r\n"
        }
    ]
}