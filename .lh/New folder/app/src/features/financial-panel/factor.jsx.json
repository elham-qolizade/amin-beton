{
    "sourceFile": "New folder/app/src/features/financial-panel/factor.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1747570633910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747570716958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import PropTypes from \"prop-types\";\r\n import styled from \"styled-components\";\r\n import { useState, useEffect, useCallback } from \"react\";\r\n+\r\n const Wrapper = styled.div`\r\n   padding: 6rem;\r\n   background-color: #fff;\r\n   border-radius: 8px;\r\n@@ -15,15 +16,16 @@\n   font-weight: bold;\r\n   color: var(--color-dark);\r\n   margin-bottom: 1rem;\r\n `;\r\n+\r\n const ScrollableInvoicesContainer = styled.div`\r\n   max-height: 400px;\r\n   overflow-y: auto;\r\n   margin-bottom: 2rem;\r\n   padding-right: 0.5rem;\r\n \r\n-  /* برای نمایش بهتر اسکرول بار در برخی مرورگرها */\r\n+  /* custom scrollbar */\r\n   scrollbar-width: thin;\r\n   scrollbar-color: #ccc transparent;\r\n \r\n   &::-webkit-scrollbar {\r\n@@ -77,9 +79,9 @@\n const FormWrapper = styled.form`\r\n   background-color: #f1f1f1;\r\n   padding: 2rem;\r\n   border-radius: 8px;\r\n-  margin-top: 3rem;\r\n+  margin-top: 2rem;\r\n `;\r\n \r\n const InputField = styled.input`\r\n   width: 100%;\r\n@@ -109,8 +111,24 @@\n     cursor: not-allowed;\r\n   }\r\n `;\r\n \r\n+const AddButton = styled.button`\r\n+  margin: 1.5rem 0;\r\n+  padding: 0.8rem 1.6rem;\r\n+  background-color: var(--color-brand-600);\r\n+  color: #fff;\r\n+  border: none;\r\n+  border-radius: 4px;\r\n+  font-size: 1.1rem;\r\n+  cursor: pointer;\r\n+  transition: background-color 0.3s;\r\n+\r\n+  &:hover {\r\n+    background-color: var(--color-brand-800);\r\n+  }\r\n+`;\r\n+\r\n const statusMap = {\r\n   1: \"ارسال شده\",\r\n   2: \"تایید شده\",\r\n   3: \"رد شده\",\r\n@@ -119,8 +137,10 @@\n function InvoicesListWithForm({ orderDetails }) {\r\n   const [price, setPrice] = useState(\"\");\r\n   const [loading, setLoading] = useState(false);\r\n   const [invoices, setInvoices] = useState([]);\r\n+  const [file, setFile] = useState(null);\r\n+  const [showForm, setShowForm] = useState(false);\r\n \r\n   const fetchInvoices = useCallback(async () => {\r\n     try {\r\n       const tokenData = JSON.parse(localStorage.getItem(\"token\"));\r\n@@ -133,25 +153,18 @@\n           headers: {\r\n             \"Content-Type\": \"application/json\",\r\n             Authorization: `Bearer ${token}`,\r\n           },\r\n-          body: JSON.stringify({\r\n-            order_id: orderDetails.id,\r\n-          }),\r\n+          body: JSON.stringify({ order_id: orderDetails.id }),\r\n         }\r\n       );\r\n \r\n       if (response.ok) {\r\n         const data = await response.json();\r\n-        if (Array.isArray(data) && data.length > 0) {\r\n-          setInvoices(data);\r\n-        } else {\r\n-          setInvoices([]);\r\n-        }\r\n+        setInvoices(Array.isArray(data) ? data : []);\r\n       } else {\r\n         const errorText = await response.text();\r\n         console.error(\"خطا در دریافت فاکتور:\", errorText);\r\n-        setInvoices([]);\r\n       }\r\n     } catch (error) {\r\n       console.error(\"استثنا در دریافت فاکتور:\", error);\r\n     }\r\n@@ -160,10 +173,8 @@\n   useEffect(() => {\r\n     fetchInvoices();\r\n   }, [fetchInvoices]);\r\n \r\n-  const [file, setFile] = useState(null);\r\n-\r\n   const handleCreateInvoice = async (e) => {\r\n     e.preventDefault();\r\n \r\n     if (!price) {\r\n@@ -186,11 +197,9 @@\n       const formData = new FormData();\r\n       formData.append(\"order\", orderDetails.id);\r\n       formData.append(\"price\", parseInt(price));\r\n       formData.append(\"is_paid\", false);\r\n-      if (file) {\r\n-        formData.append(\"invoice_file\", file);\r\n-      }\r\n+      if (file) formData.append(\"invoice_file\", file);\r\n \r\n       const response = await fetch(\r\n         \"http://amin-beton-back.chbk.app/api/invoice-management/\",\r\n         {\r\n@@ -205,9 +214,10 @@\n       if (response.status === 201) {\r\n         alert(\"پیش فاکتور با موفقیت ایجاد شد!\");\r\n         setPrice(\"\");\r\n         setFile(null);\r\n-        fetchInvoices(); // بروزرسانی لیست\r\n+        setShowForm(false);\r\n+        fetchInvoices();\r\n       } else {\r\n         const errorText = await response.text();\r\n         console.error(\"پاسخ سرور:\", errorText);\r\n         alert(\"مشکلی پیش آمد، دوباره تلاش کنید!\");\r\n@@ -219,12 +229,12 @@\n       setLoading(false);\r\n     }\r\n   };\r\n \r\n-  // const hasConfirmedInvoice = invoices.some((invoice) => invoice.status === 2);\r\n   return (\r\n     <Wrapper>\r\n       <Title>پیش فاکتورهای سفارش</Title>\r\n+\r\n       {invoices.length > 0 ? (\r\n         <ScrollableInvoicesContainer>\r\n           {invoices.map((invoice) => (\r\n             <InvoiceCard key={invoice.id}>\r\n@@ -234,9 +244,9 @@\n               <PriceText>قیمت: {invoice.price} تومان</PriceText>\r\n               <CreatedAtText>تاریخ ایجاد: {invoice.created_at}</CreatedAtText>\r\n               {invoice.invoice_file ? (\r\n                 <p>\r\n-                  فایل پیش فاکتور:{\" \"}\r\n+                  فایل پیش فاکتور: {\" \"}\r\n                   <InvoiceLink\r\n                     href={invoice.invoice_file}\r\n                     target=\"_blank\"\r\n                     rel=\"noopener noreferrer\"\r\n@@ -247,37 +257,48 @@\n               ) : (\r\n                 <p>پیش فاکتور موجود نیست.</p>\r\n               )}\r\n               {invoice.status === 3 && invoice.deny_reason && (\r\n-                <DenyReason>دلیل رد شدن: {invoice.deny_reason}</DenyReason>\r\n+                <DenyReason>\r\n+                  دلیل رد شدن: {invoice.deny_reason}\r\n+                </DenyReason>\r\n               )}\r\n             </InvoiceCard>\r\n           ))}\r\n         </ScrollableInvoicesContainer>\r\n       ) : (\r\n-        <>\r\n-          <p>هیچ پیش‌فاکتوری ثبت نشده است.</p>\r\n-          <FormWrapper onSubmit={handleCreateInvoice}>\r\n-            <Title>ایجاد پیش‌فاکتور جدید</Title>\r\n-            <label>قیمت پیش‌فاکتور (تومان):</label>\r\n-            <InputField\r\n-              type=\"number\"\r\n-              placeholder=\"مثلاً 1000000\"\r\n-              value={price}\r\n-              onChange={(e) => setPrice(e.target.value)}\r\n-            />\r\n-            <label>آپلود فایل پیش‌فاکتور:</label>\r\n-            <InputField\r\n-              type=\"file\"\r\n-              onChange={(e) => setFile(e.target.files[0])}\r\n-            />\r\n-            <SubmitButton type=\"submit\" disabled={loading}>\r\n-              {loading ? \"در حال ارسال...\" : \"ایجاد پیش‌فاکتور\"}\r\n-            </SubmitButton>\r\n-          </FormWrapper>\r\n-        </>\r\n+        <p>هیچ پیش‌فاکتوری ثبت نشده است.</p>\r\n       )}\r\n+\r\n+      {!showForm && (\r\n+        <AddButton onClick={() => setShowForm(true)}>\r\n+          افزودن پیش‌فاکتور\r\n+        </AddButton>\r\n+      )}\r\n+\r\n+      {showForm && (\r\n+        <FormWrapper onSubmit={handleCreateInvoice}>\r\n+          <Title>ایجاد پیش‌فاکتور جدید</Title>\r\n+          <label>قیمت پیش‌فاکتور (تومان):</label>\r\n+          <InputField\r\n+            type=\"number\"\r\n+            placeholder=\"مثلاً 1000000\"\r\n+            value={price}\r\n+            onChange={(e) => setPrice(e.target.value)}\r\n+          />\r\n+          <label>آپلود فایل پیش‌فاکتور:</label>\r\n+          <InputField type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n+          <SubmitButton type=\"submit\" disabled={loading}>\r\n+            {loading ? \"در حال ارسال...\" : \"ایجاد پیش‌فاکتور\"}\r\n+          </SubmitButton>\r\n+        </FormWrapper>\r\n+      )}\r\n     </Wrapper>\r\n   );\r\n }\r\n \r\n+InvoicesListWithForm.propTypes = {\r\n+  orderDetails: PropTypes.shape({ id: PropTypes.number.isRequired }).isRequired,\r\n+};\r\n+\r\n export default InvoicesListWithForm;\r\n+\r\n"
                }
            ],
            "date": 1747570633910,
            "name": "Commit-0",
            "content": "import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nconst Wrapper = styled.div`\r\n  padding: 6rem;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: var(--color-dark);\r\n  margin-bottom: 1rem;\r\n`;\r\nconst ScrollableInvoicesContainer = styled.div`\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n  margin-bottom: 2rem;\r\n  padding-right: 0.5rem;\r\n\r\n  /* برای نمایش بهتر اسکرول بار در برخی مرورگرها */\r\n  scrollbar-width: thin;\r\n  scrollbar-color: #ccc transparent;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: #ccc;\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n\r\nconst InvoiceCard = styled.div`\r\n  background-color: #f9f9f9;\r\n  padding: 2rem;\r\n  margin-bottom: 1.5rem;\r\n  border-radius: 8px;\r\n  border: 1px solid #eee;\r\n`;\r\n\r\nconst StatusText = styled.p`\r\n  font-size: 1.2rem;\r\n  color: var(--color-grey-800);\r\n`;\r\n\r\nconst PriceText = styled.p`\r\n  font-size: 1.3rem;\r\n  font-weight: bold;\r\n  color: var(--color-green-600);\r\n`;\r\n\r\nconst CreatedAtText = styled.p`\r\n  font-size: 1rem;\r\n  color: var(--color-grey-600);\r\n`;\r\n\r\nconst InvoiceLink = styled.a`\r\n  color: var(--color-blue-600);\r\n  font-size: 1rem;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: var(--color-blue-800);\r\n  }\r\n`;\r\n\r\nconst DenyReason = styled.p`\r\n  font-size: 1rem;\r\n  color: var(--color-red-600);\r\n  font-weight: bold;\r\n`;\r\n\r\nconst FormWrapper = styled.form`\r\n  background-color: #f1f1f1;\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  margin-top: 3rem;\r\n`;\r\n\r\nconst InputField = styled.input`\r\n  width: 100%;\r\n  padding: 0.8rem;\r\n  margin-bottom: 1.5rem;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  padding: 0.8rem 1.6rem;\r\n  background-color: var(--color-brand-600);\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1.1rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: var(--color-brand-800);\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: var(--color-grey-400);\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst statusMap = {\r\n  1: \"ارسال شده\",\r\n  2: \"تایید شده\",\r\n  3: \"رد شده\",\r\n};\r\n\r\nfunction InvoicesListWithForm({ orderDetails }) {\r\n  const [price, setPrice] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  const fetchInvoices = useCallback(async () => {\r\n    try {\r\n      const tokenData = JSON.parse(localStorage.getItem(\"token\"));\r\n      const token = tokenData?.access;\r\n\r\n      const response = await fetch(\r\n        \"http://amin-beton-back.chbk.app/api/orders/get-order-invoices/\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({\r\n            order_id: orderDetails.id,\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (Array.isArray(data) && data.length > 0) {\r\n          setInvoices(data);\r\n        } else {\r\n          setInvoices([]);\r\n        }\r\n      } else {\r\n        const errorText = await response.text();\r\n        console.error(\"خطا در دریافت فاکتور:\", errorText);\r\n        setInvoices([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"استثنا در دریافت فاکتور:\", error);\r\n    }\r\n  }, [orderDetails.id]);\r\n\r\n  useEffect(() => {\r\n    fetchInvoices();\r\n  }, [fetchInvoices]);\r\n\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleCreateInvoice = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!price) {\r\n      alert(\"لطفا مبلغ پیش فاکتور را وارد کنید\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const tokenData = JSON.parse(localStorage.getItem(\"token\"));\r\n      const token = tokenData?.access;\r\n\r\n      if (!token) {\r\n        alert(\"توکن دسترسی یافت نشد\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"order\", orderDetails.id);\r\n      formData.append(\"price\", parseInt(price));\r\n      formData.append(\"is_paid\", false);\r\n      if (file) {\r\n        formData.append(\"invoice_file\", file);\r\n      }\r\n\r\n      const response = await fetch(\r\n        \"http://amin-beton-back.chbk.app/api/invoice-management/\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: formData,\r\n        }\r\n      );\r\n\r\n      if (response.status === 201) {\r\n        alert(\"پیش فاکتور با موفقیت ایجاد شد!\");\r\n        setPrice(\"\");\r\n        setFile(null);\r\n        fetchInvoices(); // بروزرسانی لیست\r\n      } else {\r\n        const errorText = await response.text();\r\n        console.error(\"پاسخ سرور:\", errorText);\r\n        alert(\"مشکلی پیش آمد، دوباره تلاش کنید!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"خطا در ارسال فاکتور:\", error);\r\n      alert(\"خطا در ارسال فاکتور\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // const hasConfirmedInvoice = invoices.some((invoice) => invoice.status === 2);\r\n  return (\r\n    <Wrapper>\r\n      <Title>پیش فاکتورهای سفارش</Title>\r\n      {invoices.length > 0 ? (\r\n        <ScrollableInvoicesContainer>\r\n          {invoices.map((invoice) => (\r\n            <InvoiceCard key={invoice.id}>\r\n              <StatusText>\r\n                وضعیت: {statusMap[invoice.status] ?? \"نامشخص\"}\r\n              </StatusText>\r\n              <PriceText>قیمت: {invoice.price} تومان</PriceText>\r\n              <CreatedAtText>تاریخ ایجاد: {invoice.created_at}</CreatedAtText>\r\n              {invoice.invoice_file ? (\r\n                <p>\r\n                  فایل پیش فاکتور:{\" \"}\r\n                  <InvoiceLink\r\n                    href={invoice.invoice_file}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    دانلود\r\n                  </InvoiceLink>\r\n                </p>\r\n              ) : (\r\n                <p>پیش فاکتور موجود نیست.</p>\r\n              )}\r\n              {invoice.status === 3 && invoice.deny_reason && (\r\n                <DenyReason>دلیل رد شدن: {invoice.deny_reason}</DenyReason>\r\n              )}\r\n            </InvoiceCard>\r\n          ))}\r\n        </ScrollableInvoicesContainer>\r\n      ) : (\r\n        <>\r\n          <p>هیچ پیش‌فاکتوری ثبت نشده است.</p>\r\n          <FormWrapper onSubmit={handleCreateInvoice}>\r\n            <Title>ایجاد پیش‌فاکتور جدید</Title>\r\n            <label>قیمت پیش‌فاکتور (تومان):</label>\r\n            <InputField\r\n              type=\"number\"\r\n              placeholder=\"مثلاً 1000000\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            />\r\n            <label>آپلود فایل پیش‌فاکتور:</label>\r\n            <InputField\r\n              type=\"file\"\r\n              onChange={(e) => setFile(e.target.files[0])}\r\n            />\r\n            <SubmitButton type=\"submit\" disabled={loading}>\r\n              {loading ? \"در حال ارسال...\" : \"ایجاد پیش‌فاکتور\"}\r\n            </SubmitButton>\r\n          </FormWrapper>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default InvoicesListWithForm;\r\n"
        }
    ]
}