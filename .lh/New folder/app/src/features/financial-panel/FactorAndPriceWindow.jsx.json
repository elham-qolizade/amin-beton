{
    "sourceFile": "New folder/app/src/features/financial-panel/FactorAndPriceWindow.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1747570302271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747570525974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,25 +17,8 @@\n   color: var(--color-dark);\n   margin-bottom: 1rem;\n `;\n \n-const InvoiceList = styled.ul`\n-  list-style: none;\n-  margin: 0;\n-  padding: 0;\n-`;\n-\n-const InvoiceItem = styled.li`\n-  background-color: #e8ffe8;\n-  padding: 1.5rem;\n-  border-radius: 8px;\n-  border: 1px solid #00b300;\n-  margin-bottom: 1rem;\n-  display: flex;\n-  justify-content: space-between;\n-  align-items: center;\n-`;\n-\n const FormWrapper = styled.form`\n   background-color: #f1f1f1;\n   padding: 2rem;\n   border-radius: 8px;\n@@ -70,22 +53,14 @@\n     cursor: not-allowed;\n   }\n `;\n \n-const AddButton = styled.button`\n+const InvoiceBox = styled.div`\n+  background-color: #e8ffe8;\n+  padding: 2rem;\n+  border-radius: 8px;\n   margin-top: 2rem;\n-  padding: 0.8rem 1.6rem;\n-  background-color: var(--color-brand-600);\n-  color: #fff;\n-  border: none;\n-  border-radius: 4px;\n-  font-size: 1.1rem;\n-  cursor: pointer;\n-  transition: background-color 0.3s;\n-\n-  &:hover {\n-    background-color: var(--color-brand-800);\n-  }\n+  border: 1px solid #00b300;\n `;\n \n function FinalInvoiceSection({ orderDetails }) {\n   const [loading, setLoading] = useState(true);\n@@ -93,54 +68,50 @@\n   const [price, setPrice] = useState(\"\");\n   const [fileLink, setFileLink] = useState(\"\");\n   const [showForm, setShowForm] = useState(false);\n   const [submitting, setSubmitting] = useState(false);\n-  const [invoiceList, setInvoiceList] = useState([]);\n \n   const orderId = orderDetails.id;\n \n-  const fetchFactor = async () => {\n-    const tokenData = JSON.parse(localStorage.getItem(\"token\"));\n-    const token = tokenData?.access;\n+  useEffect(() => {\n+    const fetchFactor = async () => {\n+      const tokenData = JSON.parse(localStorage.getItem(\"token\"));\n+      const token = tokenData?.access;\n \n-    if (!token) {\n-      alert(\"توکن دسترسی یافت نشد\");\n-      setLoading(false);\n-      return;\n-    }\n+      if (!token) {\n+        alert(\"توکن دسترسی یافت نشد\");\n+        setLoading(false);\n+        return;\n+      }\n \n-    try {\n-      const response = await fetch(\n-        \"http://amin-beton-back.chbk.app/api/orders/get-order-factor/\",\n-        {\n-          method: \"POST\",\n-          headers: {\n-            \"Content-Type\": \"application/json\",\n-            Authorization: `Bearer ${token}`,\n-          },\n-          body: JSON.stringify({ order_id: orderId }),\n+      try {\n+        const response = await fetch(\n+          \"http://amin-beton-back.chbk.app/api/orders/get-order-factor/\",\n+          {\n+            method: \"POST\",\n+            headers: {\n+              \"Content-Type\": \"application/json\",\n+              Authorization: `Bearer ${token}`,\n+            },\n+            body: JSON.stringify({ order_id: orderId }),\n+          }\n+        );\n+\n+        if (response.status === 200) {\n+          const data = await response.json();\n+          setFactor(data);\n+          setShowForm(false);\n+        } else if (response.status === 404) {\n+          setShowForm(true);\n         }\n-      );\n-\n-      if (response.status === 200) {\n-        const data = await response.json();\n-        setFactor(data);\n-        setInvoiceList([data]);\n-        setShowForm(false);\n-      } else if (response.status === 404) {\n-        setShowForm(false);\n-        setInvoiceList([]);\n+      } catch (error) {\n+        console.error(\"خطا در دریافت فاکتور:\", error);\n+      } finally {\n+        setLoading(false);\n       }\n-    } catch (error) {\n-      console.error(\"خطا در دریافت فاکتور:\", error);\n-    } finally {\n-      setLoading(false);\n-    }\n-  };\n+    };\n \n-  useEffect(() => {\n     fetchFactor();\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, [orderId]);\n \n   const handleCreateFactor = async (e) => {\n     e.preventDefault();\n@@ -183,12 +154,26 @@\n       );\n \n       if (response.status === 201) {\n         alert(\"فاکتور با موفقیت ثبت شد ✅\");\n-        setPrice(\"\");\n-        setFileLink(\"\");\n-        setShowForm(false);\n-        await fetchFactor();\n+\n+        const refetchFactor = await fetch(\n+          \"http://amin-beton-back.chbk.app/api/orders/get-order-factor/\",\n+          {\n+            method: \"POST\",\n+            headers: {\n+              \"Content-Type\": \"application/json\",\n+              Authorization: `Bearer ${token}`,\n+            },\n+            body: JSON.stringify({ order_id: orderId }),\n+          }\n+        );\n+\n+        if (refetchFactor.status === 200) {\n+          const updatedFactor = await refetchFactor.json();\n+          setFactor(updatedFactor);\n+          setShowForm(false);\n+        }\n       } else if (response.status === 400) {\n         alert(\"این سفارش قبلاً فاکتور دارد\");\n       } else {\n         const errorText = await response.text();\n@@ -208,51 +193,57 @@\n       <Title>فاکتور نهایی سفارش</Title>\n \n       {loading && <p>در حال دریافت اطلاعات...</p>}\n \n-      {!loading && invoiceList.length > 0 && (\n-        <InvoiceList>\n-          {invoiceList.map((inv) => (\n-            <InvoiceItem key={inv.id}>\n-              <span>💰 قیمت: {inv.price.toLocaleString()} تومان</span>\n-              <a href={inv.factor} target=\"_blank\" rel=\"noopener noreferrer\">\n-                دانلود فاکتور\n-              </a>\n-            </InvoiceItem>\n-          ))}\n-        </InvoiceList>\n+      {!loading && factor ? (\n+        <InvoiceBox>\n+          <p>💰 قیمت: {factor.price} تومان</p>\n+          <p>\n+            📎 فایل فاکتور:{\" \"}\n+            <a href={factor.factor} target=\"_blank\" rel=\"noopener noreferrer\">\n+              دانلود\n+            </a>\n+          </p>\n+        </InvoiceBox>\n+      ) : (\n+        !loading &&\n+        showForm && (\n+          <FormWrapper onSubmit={handleCreateFactor}>\n+            <label>قیمت فاکتور:</label>\n+            <InputField\n+              type=\"number\"\n+              value={price}\n+              placeholder=\"مثلاً 2000000\"\n+              onChange={(e) => setPrice(e.target.value)}\n+            />\n+            <label>فایل فاکتور:</label>\n+            <InputField\n+              type=\"file\"\n+              onChange={(e) => setFileLink(e.target.files[0])}\n+            />\n+            <SubmitButton type=\"submit\" disabled={submitting}>\n+              {submitting ? \"در حال ارسال...\" : \"ایجاد فاکتور\"}\n+            </SubmitButton>\n+          </FormWrapper>\n+        )\n       )}\n-\n-      {!loading && !showForm && (\n-        <AddButton onClick={() => setShowForm(true)}>افزودن فاکتور</AddButton>\n-      )}\n-\n-      {showForm && (\n-        <FormWrapper onSubmit={handleCreateFactor}>\n-          <label>قیمت فاکتور:</label>\n-          <InputField\n-            type=\"number\"\n-            value={price}\n-            placeholder=\"مثلاً 2000000\"\n-            onChange={(e) => setPrice(e.target.value)}\n-          />\n-          <label>فایل فاکتور:</label>\n-          <InputField\n-            type=\"file\"\n-            onChange={(e) => setFileLink(e.target.files[0])}\n-          />\n-          <SubmitButton type=\"submit\" disabled={submitting}>\n-            {submitting ? \"در حال ارسال...\" : \"ایجاد فاکتور\"}\n-          </SubmitButton>\n-        </FormWrapper>\n-      )}\n     </Wrapper>\n   );\n }\n \n FinalInvoiceSection.propTypes = {\n   orderDetails: PropTypes.shape({\n     id: PropTypes.number.isRequired,\n+    invoices: PropTypes.arrayOf(\n+      PropTypes.shape({\n+        id: PropTypes.number.isRequired,\n+        status: PropTypes.number.isRequired,\n+        invoice_file: PropTypes.string,\n+        deny_reason: PropTypes.string,\n+        created_at: PropTypes.string,\n+        price: PropTypes.number.isRequired,\n+      })\n+    ).isRequired,\n   }).isRequired,\n };\n \n export default FinalInvoiceSection;\n"
                }
            ],
            "date": 1747570302271,
            "name": "Commit-0",
            "content": "import { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  padding: 6rem;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h2`\n  font-size: 2rem;\n  font-weight: bold;\n  color: var(--color-dark);\n  margin-bottom: 1rem;\n`;\n\nconst InvoiceList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst InvoiceItem = styled.li`\n  background-color: #e8ffe8;\n  padding: 1.5rem;\n  border-radius: 8px;\n  border: 1px solid #00b300;\n  margin-bottom: 1rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst FormWrapper = styled.form`\n  background-color: #f1f1f1;\n  padding: 2rem;\n  border-radius: 8px;\n  margin-top: 3rem;\n`;\n\nconst InputField = styled.input`\n  width: 100%;\n  padding: 0.8rem;\n  margin-bottom: 1.5rem;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  font-size: 1rem;\n`;\n\nconst SubmitButton = styled.button`\n  padding: 0.8rem 1.6rem;\n  background-color: var(--color-brand-600);\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  font-size: 1.1rem;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: var(--color-brand-800);\n  }\n\n  &:disabled {\n    background-color: var(--color-grey-400);\n    cursor: not-allowed;\n  }\n`;\n\nconst AddButton = styled.button`\n  margin-top: 2rem;\n  padding: 0.8rem 1.6rem;\n  background-color: var(--color-brand-600);\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  font-size: 1.1rem;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: var(--color-brand-800);\n  }\n`;\n\nfunction FinalInvoiceSection({ orderDetails }) {\n  const [loading, setLoading] = useState(true);\n  const [factor, setFactor] = useState(null);\n  const [price, setPrice] = useState(\"\");\n  const [fileLink, setFileLink] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [invoiceList, setInvoiceList] = useState([]);\n\n  const orderId = orderDetails.id;\n\n  const fetchFactor = async () => {\n    const tokenData = JSON.parse(localStorage.getItem(\"token\"));\n    const token = tokenData?.access;\n\n    if (!token) {\n      alert(\"توکن دسترسی یافت نشد\");\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        \"http://amin-beton-back.chbk.app/api/orders/get-order-factor/\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n          body: JSON.stringify({ order_id: orderId }),\n        }\n      );\n\n      if (response.status === 200) {\n        const data = await response.json();\n        setFactor(data);\n        setInvoiceList([data]);\n        setShowForm(false);\n      } else if (response.status === 404) {\n        setShowForm(false);\n        setInvoiceList([]);\n      }\n    } catch (error) {\n      console.error(\"خطا در دریافت فاکتور:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchFactor();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orderId]);\n\n  const handleCreateFactor = async (e) => {\n    e.preventDefault();\n\n    if (!price || Number(price) <= 0) {\n      alert(\"لطفاً یک قیمت معتبر وارد کنید\");\n      return;\n    }\n\n    if (!fileLink) {\n      alert(\"لطفاً فایل فاکتور را بارگذاری کنید\");\n      return;\n    }\n\n    const tokenData = JSON.parse(localStorage.getItem(\"token\"));\n    const token = tokenData?.access;\n\n    if (!token) {\n      alert(\"توکن دسترسی یافت نشد\");\n      return;\n    }\n\n    setSubmitting(true);\n\n    const formData = new FormData();\n    formData.append(\"price\", price);\n    formData.append(\"factor\", fileLink);\n    formData.append(\"order\", orderId);\n\n    try {\n      const response = await fetch(\n        \"https://amin-beton-back.chbk.app/api/order-management/add-factor/\",\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n          body: formData,\n        }\n      );\n\n      if (response.status === 201) {\n        alert(\"فاکتور با موفقیت ثبت شد ✅\");\n        setPrice(\"\");\n        setFileLink(\"\");\n        setShowForm(false);\n        await fetchFactor();\n      } else if (response.status === 400) {\n        alert(\"این سفارش قبلاً فاکتور دارد\");\n      } else {\n        const errorText = await response.text();\n        console.error(\"خطا در ایجاد فاکتور:\", errorText);\n        alert(\"مشکلی در ایجاد فاکتور پیش آمد.\");\n      }\n    } catch (error) {\n      console.error(\"خطا در ارسال فاکتور:\", error);\n      alert(\"خطای شبکه هنگام ارسال فاکتور.\");\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Title>فاکتور نهایی سفارش</Title>\n\n      {loading && <p>در حال دریافت اطلاعات...</p>}\n\n      {!loading && invoiceList.length > 0 && (\n        <InvoiceList>\n          {invoiceList.map((inv) => (\n            <InvoiceItem key={inv.id}>\n              <span>💰 قیمت: {inv.price.toLocaleString()} تومان</span>\n              <a href={inv.factor} target=\"_blank\" rel=\"noopener noreferrer\">\n                دانلود فاکتور\n              </a>\n            </InvoiceItem>\n          ))}\n        </InvoiceList>\n      )}\n\n      {!loading && !showForm && (\n        <AddButton onClick={() => setShowForm(true)}>\n          افزودن فاکتور\n        </AddButton>\n      )}\n\n      {showForm && (\n        <FormWrapper onSubmit={handleCreateFactor}>\n          <label>قیمت فاکتور:</label>\n          <InputField\n            type=\"number\"\n            value={price}\n            placeholder=\"مثلاً 2000000\"\n            onChange={(e) => setPrice(e.target.value)}\n          />\n          <label>فایل فاکتور:</label>\n          <InputField\n            type=\"file\"\n            onChange={(e) => setFileLink(e.target.files[0])}\n          />\n          <SubmitButton type=\"submit\" disabled={submitting}>\n            {submitting ? \"در حال ارسال...\" : \"ایجاد فاکتور\"}\n          </SubmitButton>\n        </FormWrapper>\n      )}\n    </Wrapper>\n  );\n}\n\nFinalInvoiceSection.propTypes = {\n  orderDetails: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default FinalInvoiceSection;\n"
        }
    ]
}